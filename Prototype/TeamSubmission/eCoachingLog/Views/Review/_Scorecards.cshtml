@using eCoachingLog.Models.User
@using eCoachingLog.Models.Common
@model eCoachingLog.ViewModels.ReviewViewModel

@{
    var user = ((User)Session["AuthenticatedUser"]);
    const string WebChat = "Web Chat";
    const string WrittenCorrespondence = "Written Correspondence";
}
<br />
@*Read Only? @Model.IsReadOnly
<br /> 
Page Name: @Model.ReviewPageName*@ 
@foreach (Scorecard s in Model.LogDetail.Scorecards)
{
	<div class="panel-group" id="accordion-@s.EvalId">
		<div class="panel panel-maximus-color">
			<div class="panel-heading-thin panel-heading-collape" data-toggle="collapse" data-parent="#accordion-@s.EvalId" data-target="#@s.EvalId">
				<p class="panel-title-small accordion-toggle">
					&nbsp; @s.EvalName
					<span class="glyphicon glyphicon-plus pull-right">&nbsp;</span>
				</p>
			</div>
			<div id="@s.EvalId" class="panel-collapse collapse">
				<div class="panel-body">
					<p><strong>Form Name:</strong> @s.ScorecardName</p>
					<p><strong>Verint:</strong> @s.VerintId</p>
                    @if (String.Equals(s.Channel, WebChat, StringComparison.OrdinalIgnoreCase))
                    {
                        <p><strong>Activity ID:</strong> @s.ActivityId</p>
                    }
                    @if (String.Equals(s.Channel, WrittenCorrespondence, StringComparison.OrdinalIgnoreCase))
                    {
                        <p><strong>DCN:</strong> @s.ActivityId</p>
                    }
					<p><strong>Coaching Monitor:</strong> @s.CoachingMonitor</p>
					<p><strong>Program:</strong> @s.Program</p>
					<p><strong>Date Of Event:</strong> @s.DateOfEvent</p>
					<p><strong>Submitter:</strong> @s.SubmitterName</p>
					@if (Model.ShowEvalDetail)
                    {
                        // default to Phone
                        var issueResolutionLabel = "Issue Resolution";
                        var efficiencyLabel = "Call Efficiency";
                        var issueDiagnosisLabel = "Active Listening";
                        var communicationLabel = "Personality Flexing";
                        if (String.Equals(s.Channel, WebChat, StringComparison.OrdinalIgnoreCase))
                        {
                            efficiencyLabel = "Chat Efficiency";
                            issueDiagnosisLabel = "Issue Diagnosis";
                            communicationLabel = "Professional Communication";
                        }
                        else if (String.Equals(s.Channel, WrittenCorrespondence, StringComparison.OrdinalIgnoreCase))
                        {
                            efficiencyLabel = "";
                            issueDiagnosisLabel = "";
                            issueResolutionLabel = "Business Correspondence";
                            communicationLabel = "";
                        }
                        <p><strong>Contact Reason:</strong> @Html.Raw(s.ContactReason)</p>
						<p><strong>Business Process:</strong> @Html.Raw(s.BusinessProcess)<br />
                            <strong>Comments:</strong>
                            <span id="bp_comments_@s.EvalId"> @Html.Raw(s.BusinessProcessComment)</span> 
                            @if (Model.AllowCopy && !String.IsNullOrEmpty(s.BusinessProcessComment))
                            {
                                <a href="#" name="copy" class="glyphicon glyphicon-copy">Copy</a>  
                            }
                        </p>

						<p><strong>Information Accuracy:</strong> @Html.Raw(s.InfoAccuracy)<br />
                            <strong>Comments:</strong>
                            <span id="ia_comments_@s.EvalId"> @Html.Raw(s.InfoAccuracyComment)</span>
                            @if (Model.AllowCopy && !String.IsNullOrEmpty(s.InfoAccuracyComment))
                            {
                                <a href="#" name="copy" class="glyphicon glyphicon-copy">Copy</a>
                            }  
                        </p>

						<p><strong>Privacy Disclaimers:</strong> @Html.Raw(s.PrivacyDisclaimers)<br />
                            <strong>Comments:</strong>
                            <span id="pd_comments_@s.EvalId"> @Html.Raw(s.PrivacyDisclaimersComment)</span>
                            @if (Model.AllowCopy && !String.IsNullOrEmpty(s.PrivacyDisclaimersComment))
                            {
                                <a href="#" name="copy" class="glyphicon glyphicon-copy">Copy</a>
                            }
                        </p>

                        <p><strong>@issueResolutionLabel:</strong> @Html.Raw(s.IssueResolution)<br />
                            <strong>Comments:</strong>
                            <span id="ir_comments_@s.EvalId"> @Html.Raw(s.IssueResolutionComment)</span>
                            @if (Model.AllowCopy && !String.IsNullOrEmpty(s.IssueResolutionComment))
                            {
                                <a href="#" name="copy" class="glyphicon glyphicon-copy">Copy</a>
                            }                            
                        </p>

                        if (!String.Equals(s.Channel, WrittenCorrespondence, StringComparison.OrdinalIgnoreCase))
                        {
                            <p><strong>@efficiencyLabel:</strong> @Html.Raw(s.CallEfficiency) <br />
                                <strong>Comments:</strong>
                                <span id="ce_comments_@s.EvalId"> @Html.Raw(s.CallEfficiencyComment)</span>
                                @if (Model.AllowCopy && !String.IsNullOrEmpty(s.CallEfficiencyComment))
                                {
                                    <a href="#" name="copy" class="glyphicon glyphicon-copy">Copy</a>
                                }
                            </p>
     						<p><strong>@issueDiagnosisLabel:</strong> @Html.Raw(s.ActiveListening)<br />
                                <strong>Comments:</strong>
                                <span id="al_comments_@s.EvalId"> @Html.Raw(s.ActiveListeningComment)</span>
                                @if (Model.AllowCopy && !String.IsNullOrEmpty(s.ActiveListeningComment))
                                {
                                    <a href="#" name="copy" class="glyphicon glyphicon-copy">Copy</a>
                                }
                            </p>
						    <p><strong>@communicationLabel:</strong> @Html.Raw(s.PersonalityFlexing)<br />
                                <strong>Comments:</strong>
                                <span id="pf_comments_@s.EvalId"> @Html.Raw(s.PersonalityFlexingComment)</span>
                                @if (Model.AllowCopy && !String.IsNullOrEmpty(s.PersonalityFlexingComment))
                                {
                                    <a href="#" name="copy" class="glyphicon glyphicon-copy">Copy</a>
                                }
                            </p>
						    <p><strong>Start Temperature:</strong> @Html.Raw(s.StartTemperature)<br />
                                <strong>Comments:</strong>
                                <span> @Html.Raw(s.StartTemperatureComment)</span>
                            </p>
						    <p><strong>End Temperature:</strong> @Html.Raw(s.EndTemperature)<br />
                                <strong>Comments:</strong>
                                <span> @Html.Raw(s.EndTemperatureComment)</span>
                            </p>
                        }
                    }
				</div>
			</div>
		</div>
	</div>
}

<div class='mt-2'>
	<strong>Strengths and Opportunities:</strong> 
	<p>@Model.LogDetail.StrengthOpportunity</p>
</div>

<script>
    $(function () {
        $("a[name=copy]").on("click", function (e) {
            var textToCopyId = $(this).prev("span").attr("id");
            var element = document.getElementById(textToCopyId);
            var range = document.createRange();
            range.selectNodeContents(element);
            var selection = window.getSelection();
            selection.removeAllRanges();
            selection.addRange(range);
            document.execCommand('copy');

            $('a[name=copy]:contains("Copied")').text('Copy');
            $(this).text("Copied");

            return false;
        });

    })
</script>


