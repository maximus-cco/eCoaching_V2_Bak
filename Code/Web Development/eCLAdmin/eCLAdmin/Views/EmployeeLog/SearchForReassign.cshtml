@{
    ViewBag.Title = "Manage Employee Logs";
}

<div class="page-header">
    <h3>@ViewBag.SubTitle</h3>
</div>

<!-- Search Form -->
@using (Ajax.BeginForm("SearchForReassign", "EmployeeLog", FormMethod.Post,
                                new AjaxOptions
                                {
                                    InsertionMode = InsertionMode.Replace,
                                    HttpMethod = "POST",
                                    UpdateTargetId = "search-result",
                                    OnBegin = "processSearchOnBegin",
                                    OnComplete = "processSearchOnComplete"
                                },
                                new { @class = "form-horizontal" }
                                ))
{

    { Html.RenderPartial("_SearchOption", "Search by Employee Level, Log Status, and Reviewer"); }

    <div class="" id="div-search-by-default">
        <fieldset class="border">
            <br />
            <div class="col-sm-3">
                @Html.DropDownList("module", (SelectList)ViewBag.Modules, new { @class = "form-control" })
                <div id="employee-error-msg" class="field-validation-error"></div>
            </div>

            <div class="col-sm-3">
                @Html.DropDownList("employeeLogStatus", (SelectList)ViewBag.Statuses, new { @class = "form-control" })
                <div id="type-error-msg" class="field-validation-error"></div>
            </div>

            <div class="col-sm-3">
                @Html.DropDownList("reviewer", (SelectList)ViewBag.Reviewers, new { @class = "form-control", id = "reviewer-dropdown" })
                <div id="module-error-msg" class="field-validation-error"></div>
            </div>

            <div>
                <button class="btn btn-primary" type="submit" id="btn-search">
                    <span class="glyphicon glyphicon-search"></span>&nbsp;Search
                </button>
            </div>

        </fieldset>
    </div>

    <div class="hidden" id="div-search-by-logname">
        @{Html.RenderPartial("_SearchByLogName");}
    </div>

}

<div id="message"></div>

<!-- Search Result -->
<form id="form-select-EmployeeLogs">
    <p class="text-right">
        @*@Html.ActionLink("Reassign ", "InitReassignModal", "EmployeeLog", null, new { @class = "modal-link btn btn-primary", @style = "display: none;", id = "lk-reassign" })*@
        @Html.ActionLink("Reassign ", // Link Text
                   "InitReassignModal", // Action Method Name
                   "EmployeeLog", // Controller Name
                    new
                    {
                        @class = "modal-link btn btn-primary",
                        @style = "display: none;",
                        id = "lk-reassign"
                    })
    </p>

    <div id="search-result"></div>
</form>

@section scripts {
    <script type="text/javascript">
        $(function () {

            // Check/Uncheck all checkboxes.
            $(document).on('click', '#checkall', function () {
                var status = $("#checkall").prop('checked');

                toggleCheckboxes(status);
                hideShowReassignLink();
            });

            $('body').on('click', '.checkbox-select-employeeLog', function () {
                // Uncheck checkall box
                $('#checkall').prop('checked', false);

                var rowsChecked = $('.checkbox-select-employeeLog:checked').length;
                $('#total-selected').text(rowsChecked + " selected");

                hideShowReassignLink();
            });

            $("#employeeLogStatus").on("change", function () {
                // Hide search result.
                $("#search-result").slideUp(500);
                $('#lk-reassign').slideUp(500);

                var statusId = $("#employeeLogStatus").val();
                var moduleId = $("#module").val();

                // if either Module or Status is NOT selected
                if (statusId == -1 || moduleId == -1) {
                    resetReviewerDropdown();
                    return false;
                }

                // Remove error msg
                $('#employeeLogStatus').removeClass("input-validation-error");
                $('#status-error-msg').html('');

                // Display "Loading..." with ajax loader gif
                $("#reviewer-dropdown").empty().append('<option value="">Loading...</option>');
                $("#reviewer-dropdown").addClass('loadinggif');

                $.ajax({
                    type: 'POST',
                    url: '@Url.Action("GetPendingReviewers")', // Call GetPendingReviewers method.
                    dataType: 'json',
                    data: { employeeLogStatusId: statusId, moduleId: moduleId}, // Get the value of the selected status and pass to GetPendingReviewers method.

                    success: function (reviewers) {
                        $("#reviewer-dropdown").empty();

                        // Load Pending Reviewer drowdown
                        var options = [];
                        $.each(reviewers, function (i, reviewer) {
                            options.push('<option value="', reviewer.Value, '">' + reviewer.Text + '</option>');
                        });

                        $("#reviewer-dropdown").html(options.join(''));
                        $("#reviewer-dropdown").removeClass('loadinggif');
                    }
                });
                return false;
            })

            $("#module").on("change", function () {
                // Hide search result.
                $("#search-result").slideUp(500);
                $('#lk-reassign').slideUp(500);

                var moduleId = $("#module").val();

                // If Status dropdown list is not populated from database yet
                // Make ajax call to get the statuses for the selected module, then return
                var statusLength = $("#employeeLogStatus").length;
                if (statusLength == 1)
                {
                    // Remove error msg
                    $('#module').removeClass("input-validation-error");
                    $('#module-error-msg').html('');

                    // Display "Loading..." with ajax loader gif
                    $("#employeeLogStatus").empty().append('<option value="">Loading...</option>');
                    $("#employeeLogStatus").addClass('loadinggif');

                    resetReviewerDropdown();

                    // Ajax call
                    $.ajax({
                        type: 'POST',
                        url: '@Url.Action("GetPendingStatuses")', // Call GetPendingStatuses method.
                        dataType: 'json',
                        data: { moduleId: moduleId }, // Get the value of the selected module and pass to GetPendingStatuses method.

                        success: function (statuses) {
                            $("#employeeLogStatus").empty();
                            
                            // Load Status drowdown
                            var options = [];
                            $.each(statuses, function (i, status) {
                                options.push('<option value="', status.Value, '">' + status.Text + '</option>');
                            });

                            $("#employeeLogStatus").html(options.join(''));
                            $("#employeeLogStatus").removeClass('loadinggif');
                        }
                    });

                    return false;
                }


                var statusId = $("#employeeLogStatus").val();
                // if either Module or Status is NOT selected
                if (statusId == -1 || moduleId == -1) {
                    resetReviewerDropdown();
                    return false;
                }

                // Display "Loading..." with ajax loader gif
                $("#reviewer-dropdown").empty().append('<option value="">Loading...</option>');
                $("#reviewer-dropdown").addClass('loadinggif');

                // Ajax call
                $.ajax({
                    type: 'POST',
                    url: '@Url.Action("GetPendingReviewers")', // Call GetPendingReviewers method.
                    dataType: 'json',
                    data: { EmployeeLogStatusId: statusId }, // Get the value of the selected status and pass to GetPendingReviewers method.

                    success: function (reviewers) {
                        //$("#reviewer-dropdown").removeClass('loadinggif');
                        $("#reviewer-dropdown").empty();

                        // Load Pending Reviewer drowdown
                        var options = [];
                        $.each(reviewers, function (i, reviewer) {
                            options.push('<option value="', reviewer.Value, '">' + reviewer.Text + '</option>');
                        });

                        $("#reviewer-dropdown").html(options.join(''));
                        $("#reviewer-dropdown").removeClass('loadinggif');
                    }
                });
                return false;
            })

            $("#reviewer-dropdown").on("change", function () {
                if ($("#reviewer-dropdown").val() != -1) {
                    // Remove error msg
                    $('#reviewer-dropdown').removeClass("input-validation-error");
                    $('#reviewer-error-msg').html('');
                }
                $("#search-result").slideUp(500);
                $('#lk-reassign').slideUp(500);
            })
        });

        function initPage() {
            // Hide the message
            $(".alert").slideUp(1000);
            // Hide "Reassign" link.
            $('#lk-reassign').slideUp(1000);
            // Hide search result.
            $("#search-result").slideUp(1000);
            // Reset Employee Level dropdown.
            $('#module').val(-1);
            // Reset Status dropdown.
            $('#employeeLogStatus').val(-1);
            // Reset Pending Reviewer dropdown.
            // Remove all in Pending Reviewer dropdown except for the first default item "Please select a reviewer"
            $('#reviewer-dropdown').find('option:gt(0)').remove()

            resetSearchByLogName();
        }

        function hideShowReassignLink() {
            var numberChecked = $('.checkbox-select-employeeLog:checked').length;

            if (numberChecked > 0) {
                $('#lk-reassign').slideDown(500);
            }

            else {
                $('#lk-reassign').slideUp(500);
            }
        }

        function validateForm() {
            var isFormValid = true;
            var searchByDefault = $('#radio-search-option-default').is(':checked');
            if (searchByDefault === true) {
                if ($('#module').val() == -1) {
                    $('#module').addClass("input-validation-error");
                    $('#reviewer').addClass("input-validation-error");
                    //$('#module-error-msg').html('Please select Employee Level');
                    isFormValid = false;
                }
                if ($('#employeeLogStatus').val() == -1) {
                    $('#employeeLogStatus').addClass("input-validation-error");
                    //$('#status-error-msg').html('Please select a status');
                    isFormValid = false;
                }
                if ($('#reviewer-dropdown').val() == -1) {
                    $('#reviewer-dropdown').addClass("input-validation-error");
                    //$('#reviewer-error-msg').html('Please select a reviewer');
                    isFormValid = false;
                }

                return isFormValid;
            }

            // search by log name
            return validateSearchByLogNameForm();
        }

        function processSearchOnBegin() {
            if (!validateForm()) {
                return false;
            }
            showSpinner();
        }

        function processSearchOnComplete() {
            hideSpinner();
            $("#search-result").slideDown(500);
            hideShowReassignLink();
        }

    </script>
}


