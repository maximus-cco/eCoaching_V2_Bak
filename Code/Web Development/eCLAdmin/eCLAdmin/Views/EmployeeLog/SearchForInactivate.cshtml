@{
    ViewBag.Title = "Manage Employee Logs";
}

<h2>@ViewBag.SubTitle</h2>
<br />

<!-- Search Form -->
@using (Ajax.BeginForm("SearchForInactivate", "EmployeeLog", FormMethod.Post,
                    new AjaxOptions
                    {
                        InsertionMode = InsertionMode.Replace,
                        HttpMethod = "POST",
                        UpdateTargetId = "search-result",
                        OnBegin = "processSearchOnBegin",
                        OnComplete = "processSearchOnComplete"
                    },
                    new { id = "search-form", @class = "form-horizontal" }
                    ))
{
    <div class="form-group">
        <label class="control-label col-sm-2" for="module">Module:</label>
        <div id="module-error-msg" class="field-validation-error"></div>
        <div class="col-sm-10">
            @Html.DropDownList(
                "module",
                (SelectList)ViewBag.Modules,
                new
                {
                    @class = "form-control"
                }
            )
        </div>
    </div>

    <div class="form-group">
        <label class="control-label col-sm-2" for="logType">Type:</label>
        <div id="type-error-msg" class="field-validation-error"></div>
        <div class="col-sm-10">
            @Html.DropDownList(
             "logType",
             (SelectList)ViewBag.LogTypes,
             new
             {
                 @class = "form-control"
             }
            )
        </div>
    </div>

    <div class="form-group">
        <label class="control-label col-sm-2" for="employee">Employee:</label>
        <div id="employee-error-msg" class="field-validation-error"></div>
        <div class="col-sm-10">
            @Html.DropDownList(
             "employee",
             (SelectList)ViewBag.Employees,
             new {
                @class = "form-control"
             }
            )
        </div>
    </div>      
    
    <div class="form-group"> 
        <div class="col-sm-offset-2 col-sm-10">
            <button class="btn btn-primary" type="submit" id="btn-search">
                <span class="glyphicon glyphicon-search"></span>&nbsp;Search
            </button>
        </div>
    </div>
}

<div id="message"></div>

<!-- Search Result -->
<form id="form-select-EmployeeLogs">
    <p class="text-right">
        @Html.ActionLink("Inactivate ", // Link Text
                "InitInactivateModal", // Action Method Name
                "EmployeeLog", // Controller Name
                new
                {
                    @class = "modal-link btn btn-primary",
                    @style = "display: none;",
                    id = "lk-inactivate"
                })
    </p>
    <div id="search-result"></div>
</form>

@section scripts {
    <script type="text/javascript">
        $(function () {

            $('#example').DataTable();


            $('body').on('click', '#checkall', function () {
                var status = $("#checkall").prop('checked');
                toggleCheckboxes(status);
                hideShowInativateLink();
            });

            $('body').on('click', '.checkbox-select-employeeLog', function () {
                // Uncheck checkall box
                $('#checkall').prop('checked', false);

                var rowsChecked = $('.checkbox-select-employeeLog:checked').length;
                $('#total-selected').text(rowsChecked + " selected");

                hideShowInativateLink();
            });

            $("#logType").on("change", function () {
                // Hide search result
                $("#search-result").slideUp(500);
                $('#lk-inactivate').slideUp(500);

                var logTypeSelected = $("#logType").val();
                var mouduleSelected = $("#module").val();

                // if either Module or Type is NOT selected
                if (logTypeSelected == -1 || mouduleSelected == -1) {
                    resetEmployeeDropdown();
                    return false;
                }

                $("#employee").empty().append('<option value="">Loading...</option>');
                $("#employee").addClass('loadinggif');

                var action = "@Constants.LOG_ACTION_INACTIVATE";
                $.ajax({
                    type: 'POST',
                    // Call GetEmployees method.
                    url: '@Url.Action("GetEmployees")',
                    dataType: 'json',
                    // Get the value of the selected type (coaching or warning), module (csr, training...) and pass to GetEmployees method.
                    data: { logTypeId: logTypeSelected, moduleId: mouduleSelected, action: action },

                    success: function (employees) {
                        $("#employee").empty();

                        // Load Employee drowdown
                        var options = [];
                        $.each(employees, function (i, employee) {
                            options.push('<option value="', employee.Value, '">' + employee.Text + '</option>');
                        });

                        $("#employee").html(options.join(''));
                        $("#employee").removeClass('loadinggif');
                    },
                    error: function (ex) {
                        alert('Failed to retrieve employees.' + ex);
                    }
                });
                return false;
            })

            $("#module").on("change", function () {
                // Hide search result
                $("#search-result").slideUp(500);
                $('#lk-inactivate').slideUp(500);

                var logTypeSelected = $("#logType").val();
                var mouduleSelected = $("#module").val();
                var action = "@Constants.LOG_ACTION_INACTIVATE";

                // if either Module or Type is NOT selected
                if (logTypeSelected == -1 || mouduleSelected == -1) {
                    resetEmployeeDropdown();
                    return false;
                }

                $("#employee").empty().append('<option value="">Loading...</option>');
                $("#employee").addClass('loadinggif');

                var action = "@Constants.LOG_ACTION_INACTIVATE";
                $.ajax({
                    type: 'POST',
                    // Call GetEmployees method.
                    url: '@Url.Action("GetEmployees")',
                    dataType: 'json',
                    // Get the value of the selected type (coaching or warning), module (csr, training...) and pass to GetEmployees method.
                    data: { logTypeId: logTypeSelected, moduleId: mouduleSelected, action: action },

                    success: function (employees) {
                        $("#employee").empty();

                        // Load Employee drowdown
                        var options = [];
                        $.each(employees, function (i, employee) {
                            options.push('<option value="', employee.Value, '">' + employee.Text + '</option>');
                        });

                        $("#employee").html(options.join(''));
                        $("#employee").removeClass('loadinggif');
                    },
                    error: function (ex) {
                        alert('Failed to retrieve employees.' + ex);
                    }
                });
                return false;
            })

            $("#employee").on("change", function () {
                $("#search-result").slideUp(500);
                $('#lk-inactivate').slideUp(500);
            })
        });

        function initPage() {
            // Hide the message
            $(".alert").slideUp(1000);
            // Hide "Inactivate" link.
            $('#lk-inactivate').slideUp(1000);
            // Hide search result.
            $("#search-result").slideUp(1000);
            // Reset Type dropdown.
            $('#logType').val(-1);
            // Reset Employee dropdown.
            // Remove all in Employee dropdown except for the first default item "Please select an employee"
            //$('#employee').find('option:gt(0)').remove();
            resetEmployeeDropdown();
        }

        function processSearchOnBegin() {
            showSpinner();
        }

        function processSearchOnComplete() {
            hideSpinner();
            $("#search-result").show();
            hideShowInativateLink();
        }

        function hideShowInativateLink() {
            var numberChecked = $('.checkbox-select-employeeLog:checked').length;

            if (numberChecked > 0) {
                $('#lk-inactivate').show();
            }
            else {
                $('#lk-inactivate').hide();
            }
        }
    </script>
}
