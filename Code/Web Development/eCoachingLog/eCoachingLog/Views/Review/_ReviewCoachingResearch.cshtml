@model eCoachingLog.ViewModels.ReviewViewModel

@using (Html.BeginForm(null, null, FormMethod.Post, new { id = "form-mydashboard-review-pending" }))
{
	@Html.HiddenFor(m => m.IsResearchPendingForm)
	@Html.HiddenFor(m => m.LogStatusLevel)
	@Html.HiddenFor(m => m.LogDetail.LogId)
	@Html.HiddenFor(m => m.LogDetail.ModuleId)
	@Html.HiddenFor(m => m.LogDetail.IsCurrentCoachingInitiative)
	@Html.HiddenFor(m => m.LogDetail.IsOmrException)
	@Html.HiddenFor(m => m.LogDetail.IsOmrShortCall)
	@Html.HiddenFor(m => m.LogDetail.IsLowCsat)
	@Html.HiddenFor(m => m.LogDetail.IsOmrIae)
	@Html.HiddenFor(m => m.LogDetail.IsOmrIaef)
	@Html.HiddenFor(m => m.LogDetail.IsOmrIat)
	@Html.HiddenFor(m => m.LogDetail.IsEtsOae)
	@Html.HiddenFor(m => m.LogDetail.IsTrainingShortDuration)
	@Html.HiddenFor(m => m.LogDetail.IsTrainingOverdue)
	@Html.HiddenFor(m => m.LogDetail.IsBrl)
	@Html.HiddenFor(m => m.LogDetail.IsBrn)
	@Html.HiddenFor(m => m.LogDetail.CoachingNotes)
	@Html.HiddenFor(m => m.LogDetail.SupervisorEmpId)
	@Html.HiddenFor(m => m.LogDetail.ReassignedToEmpId)

	<div class='form-group mt-2' id='div-date-coached'>
		<label for="DateCoached" id="label-date-coached" class="required">Date:</label>
		<div class="col-xs-4 input-group date">
			@Html.TextBoxFor(m => m.DateCoached, new { @class = "form-control" })
			<span class="input-group-addon">
				<span class="glyphicon glyphicon-calendar"></span>
			</span>
		</div>
		@Html.ValidationMessageFor(m => m.DateCoached)
	</div>

	<div class='form-group mt-2' id='div-is-coaching-required-question'>
		<label for="IsCoachingRequired" class="required">Based on your research does this record require coaching?</label><br />
		<label class="radio-inline">
			@Html.RadioButtonFor(m => m.IsCoachingRequired, "true") Yes
		</label>
		<label class="radio-inline">
			@Html.RadioButtonFor(m => m.IsCoachingRequired, "false") No
		</label>
		@Html.ValidationMessageFor(m => m.IsCoachingRequired)
	</div>

	<div class='form-group mt-2 hide' id='div-noncoachable-main-reason'>
		<label for="MainReasonNotCoachable" class="required">What was the main reason this item was not coachable?</label>
		@Html.DropDownListFor(m => m.MainReasonNotCoachable, Model.MainReasonNotCoachableList, new { @class = "form-control", style = "width: 350px;" })
		@Html.ValidationMessageFor(m => m.MainReasonNotCoachable)
	</div>

	<div class='form-group mt-2 hide' id='div-noncoachable-detail-reason'>
		<label for="DetailReasonNotCoachable" class="required">Please provide reason/explanation/justification as to why the item was not coachable:</label>
		@Html.TextAreaFor(m => m.DetailReasonNotCoachable, new { @class = "form-control", @rows = "5", maxlength = 3000 })
		<div class="help-block">
			<span id="detail-reason-not-coachable" class="pull-right">3000 remaining</span>
		</div>
		@Html.ValidationMessageFor(m => m.DetailReasonNotCoachable)
	</div>

	<div class='form-group mt-2' id='div-coachable-detail-reason'>
		@if (Model.IsReviewByManager)
		{
			<label for="DetailReasonCoachable" class="required">Please provide reason/explanation/justification as to why the item is coachable for the Supervisor:</label>
		}
		else
		{
			<label for="DetailReasonCoachable" class="required">Provide the details from the coaching session including action plans developed:</label>
		}
		@Html.TextAreaFor(m => m.DetailReasonCoachable, new { @class = "form-control", @rows = "5", maxlength = 3000 })
		<div class="help-block">
			<span id="detail-reason-coachable" class="pull-right">3000 remaining</span>
		</div>
		@Html.ValidationMessageFor(m => m.DetailReasonCoachable)
	</div>
}

@Scripts.Render("~/bundles/scripts/review")
<script src="@Url.Content("~/Scripts/eCoachingLog/dateTimePicker.js")"></script>


