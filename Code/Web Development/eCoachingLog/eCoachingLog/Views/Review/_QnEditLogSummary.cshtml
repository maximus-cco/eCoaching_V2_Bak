@using eCoachingLog.Models.User
@using eCoachingLog.Models.Common
@model eCoachingLog.ViewModels.ReviewViewModel
@{
    var user = ((User)Session["AuthenticatedUser"]);
    var remaining = 3000 - Model.QnSummaryEditable.Length;
}

<input type="hidden" name="logid" id="logid" />

<div class="container-fluid" style="height: 100%;">
	<div class="row row-eq-height">
		<div class="col-xs-3 blue-bar">
			@{Html.RenderPartial("_CoachingLogInfo"); }
		</div>
		<!--/.col-xs-3 -->
		<div class="col-xs-9">
			<div class="modal-header">
				<button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
				<h2 class="modal-title">Review - Edit Log Summary</h2>
                @if (!String.IsNullOrEmpty(Model.LogDetail.FollowupDueDate))
                {
                    <div class="text-danger"><mark>Please complete follow-up by @Model.LogDetail.FollowupDueDate.</mark></div>
                }
				@if (!Model.IsReadOnly)
				{
					<div class="danger pull-right">Please do NOT include PII or PHI in the log entry.</div>
					<br />
					<div class="text-muted pull-right"><small>Please note that all fields are required. Double-check your work to ensure accuracy.</small></div>
				}

				<div id="div-error-prompt" class="danger"></div>
			</div>

			<div class="modal-body" style="font-size: small;">
				@{ Html.RenderPartial("_Reasons", Model.LogDetail.Reasons); }

					<!-- Display Quality NOW log -->
                    @{ Html.RenderPartial("_Scorecards"); }

                    <!-- QN log submitted by quality specialist, which need to be followed up (monitoring additional activities) -->
                    @if (Model.LogDetail.IsQn && Model.LogDetail.StatusId != 6 && Model.AdditionalActivityLogs != null && Model.AdditionalActivityLogs.Count > 0)
                    {
                        <div class="text-primary" style="margin-top: 8px;"><strong><mark>Additonal Monitoring:</mark></strong></div>
                        for (int i = 0; i < Model.AdditionalActivityLogs.Count; i++)
                        {
                            <a href="#" class="modal-link-overlay" data-log-id="@Model.AdditionalActivityLogs[i].Value" data-is-coaching="true" data-action="followupView">&nbsp;@Model.AdditionalActivityLogs[i].Text</a>
                            <br />
                        }
                    }

                    @if (Model.ShowFollowupDecisionComments)
                    {
                        { Html.RenderPartial("_QnFollowupDecisionComments"); }
                    }

					<div>
                        <form id="form-qn-summary">
                            @Html.HiddenFor(m => m.LogDetail.LogId, new { @id = "logId" })
                            @if(Model.QnSummaryReadOnly != null && Model.QnSummaryReadOnly.Trim() != "")
                            {
                                <div style="margin-top: 8px;"><strong><mark>Past Evaluation Summary:</mark></strong></div>
                                @Model.QnSummaryReadOnly
                            }

                            <div class="text-primary text-medium required" style="margin-top: 8px;"><strong>Please enter evaluation summary to be used for coaching:</strong></div>
                            @Html.TextAreaFor(m => m.QnSummaryEditable, new { @id = "summary", @class = "form-control remaining", @rows = "10", maxlength = 3000 })
                            <div class="help-block">
                                <span class="pull-right"><span class="remaining-count">@remaining</span> remaining</span>
                            </div>
                        </form>
                    </div>
					<br />
			</div>
			<!-- /.modal-body -->

			<div class="modal-footer" id="div-review-modal-footer">
				<div class="form-group">
                    <button type="button" class="btn btn-secondary" data-dismiss="modal">Cancel</button>
					<button class="btn btn-primary float-right" type="submit" id="btn-save-summary">Save</button>
				</div>
			</div>
		</div>
		<!--/.col-xs-9 -->
	</div>
	<!--/.row -->
</div>

@Scripts.Render("~/bundles/scripts/review")




