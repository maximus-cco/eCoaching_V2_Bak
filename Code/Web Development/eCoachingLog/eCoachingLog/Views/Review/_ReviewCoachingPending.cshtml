@model eCoachingLog.ViewModels.ReviewViewModel
@if (Model.ShowFollowupInfo)
{
    if (Model.LogDetail.IsQn)
    {
        { Html.RenderPartial("_QnFollowupInfo"); }
    }
    else
    {
        { Html.RenderPartial("_FollowupInfo"); }
    }
}

@if (Model.ShowSupervisorReviewInfo)
{
    { Html.RenderPartial("_SupervisorReviewInfo"); }
}

@if (Model.ShowEmployeeReviewInfo)
{
    { Html.RenderPartial("_EmployeeReviewInfo"); }
}

@using (Html.BeginForm(null, null, FormMethod.Post, new { id = "form-mydashboard-review-pending"}))
{
	@Html.HiddenFor(m => m.LogDetail.LogId)
	@Html.HiddenFor(m => m.LogDetail.FormName)
	@Html.HiddenFor(m => m.LogDetail.ModuleName)
	@Html.HiddenFor(m => m.LogDetail.StatusId)
	@Html.HiddenFor(m => m.LogDetail.SupervisorEmail)
	@Html.HiddenFor(m => m.LogDetail.ManagerEmail)
	@Html.HiddenFor(m => m.LogDetail.SupervisorEmpId)
	@Html.HiddenFor(m => m.LogDetail.ReassignedToEmpId)
	@Html.HiddenFor(m => m.LogDetail.ManagerEmpId)
	@Html.HiddenFor(m => m.LogDetail.IsLowCsat)
	@Html.HiddenFor(m => m.LogDetail.LogManagerEmpId)
	@Html.HiddenFor(m => m.IsRegularPendingForm)
	@Html.HiddenFor(m => m.IsShortCallPendingSupervisorForm)
	@Html.HiddenFor(m => m.IsShortCallPendingManagerForm)
	@Html.HiddenFor(m => m.LogDetail.CoachingNotes)
    @Html.HiddenFor(m => m.ShowFollowupCoaching)
    @Html.HiddenFor(m => m.FollowupDueDate)

    <div class='form-group mt-3 @(@Model.ShowFollowupCoaching ? "show" : "hide")'>
        <label class="required">Is follow-up coaching required?</label>
        <div>
            <label class="radio-inline">
                @Html.RadioButtonFor(m => m.IsFollowupCoachingRequired, true, new { id = "IsFollowupRequiredYes" } ) Yes
            </label>
            <label class="radio-inline ml-3">
                @Html.RadioButtonFor(m => m.IsFollowupCoachingRequired, false, new { id = "IsFollowupRequiredNo" }) No
            </label>
            @Html.ValidationMessageFor(m => m.IsFollowupCoachingRequired)
        </div>
    </div>

    <div class="mt-3 hide" id="div-followup-deadline">
        <mark>Follow-up due date: <span id="followup-due-date">@Model.FollowupDueDate</span></mark>
    </div>

    <div class='form-group mt-3' id='div-date-coached'>
        <label for="DateCoached" id="label-date-coached" class="required">Enter the date of coaching:</label>
        <div class="col-xs-4 input-group date">
            @Html.TextBoxFor(m => m.DateCoached, new { @class = "form-control" })
            <span class="input-group-addon">
                <span class="glyphicon glyphicon-calendar"></span>
            </span>
        </div>
        @Html.ValidationMessageFor(m => m.DateCoached)
    </div>

    <div class='form-group mt-3' id='div-coaching-detail'>
        <label for="DetailsCoached" class="required">Provide the details from the coaching session including action plans developed:</label>
        @Html.TextAreaFor(m => m.DetailsCoached, new { @class = "form-control remaining", @rows = "5", maxlength = 3000 })
        <div class="help-block">
            Provide as much detail as possible.
            <span class="pull-right"><span class="remaining-count">3000</span> remaining</span>
        </div>
        @Html.ValidationMessageFor(m => m.DetailsCoached)
    </div>
}
