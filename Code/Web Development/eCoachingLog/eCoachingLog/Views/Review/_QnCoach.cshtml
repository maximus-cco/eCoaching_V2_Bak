@using eCoachingLog.Models.User
@using eCoachingLog.Models.Common
@model eCoachingLog.ViewModels.ReviewViewModel
@{
    var user = ((User)Session["AuthenticatedUser"]);
}

<div class="container-fluid" style="height: 100%;">
	<div class="row row-eq-height">
		<div class="col-xs-3 blue-bar">
			@{Html.RenderPartial("_CoachingLogInfo"); }
		</div>
		<!--/.col-xs-3 -->
		<div class="col-xs-9">
			<div class="modal-header">
				<button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
				<h2 class="modal-title">Review - Coach</h2>
                @if (!String.IsNullOrEmpty(Model.LogDetail.FollowupDueDate))
                {
                    <span class="pull-left"><strong style="color: green;">Please complete follow-up by @Model.LogDetail.FollowupDueDate.</strong></span>
                }
				@if (!Model.IsReadOnly)
                {
                    Html.RenderPartial("_ReviewModalHeaderCommon");
                }

				<div id="div-error-prompt" class="danger"></div>
			</div>

			<div class="modal-body" style="font-size: small;">
				@{ Html.RenderPartial("_Reasons", Model.LogDetail.Reasons); }
                @{ Html.RenderPartial("_AdditionalText", Model.AdditionalText); }
                @{ Html.RenderPartial("_Scorecards", Model); }

                <!-- QN log submitted by quality specialist, which need to be followed up (monitoring additional activities) -->
                @if (Model.LogDetail.IsQn && Model.LogDetail.StatusId != 6 && Model.AdditionalActivityLogs != null && Model.AdditionalActivityLogs.Count > 0)
                {
                    <div class="text-primary" style="margin-top: 8px;"><strong><mark>Additonal Monitoring:</mark></strong></div>
                    for (int i = 0; i < Model.AdditionalActivityLogs.Count; i++)
                    {
                        <a href="#" class="modal-link-overlay" data-log-id="@Model.AdditionalActivityLogs[i].Value" data-is-coaching="true" data-action="viewLinkedQnsInCoachingSession">&nbsp;@Model.AdditionalActivityLogs[i].Text</a>
                            <br />
                    }
                }

                @if (Model.ShowFollowupDecisionComments)
                {
                    { Html.RenderPartial("_QnFollowupDecisionComments"); }
                }

				<div class="text-primary" style="margin-top: 8px;"><strong><mark>Evaluation Summary:</mark></strong></div>
				<div class="text-info">
                    @if (Model.IsReadyToCoach)
                    {
                        @Html.Raw(WebUtility.HtmlDecode(Model.QnSummaryAll))
                    }
                    else
                    {
                        <div class="danger"><span class='glyphicon glyphicon-alert'></span>&nbsp;Please click "Prepare" link to enter summary first before coaching.</div>
                    }
                </div>
				
                @if (Model.IsReadyToCoach)
                {
                    <div class="mt-3">
					    @{ Html.RenderPartial("_ReviewCoaching"); }
				    </div>
                }

			</div>
			<!-- /.modal-body -->

			<div class="modal-footer" id="div-review-modal-footer">
				@if (Model.IsReadyToCoach)
                {
                    <div class="form-group">
                        <button type="button" class="btn btn-secondary" data-dismiss="modal">Cancel</button>
					    <button class="btn btn-primary float-right" type="submit" id="btn-submit">Submit</button>
				    </div>
                }
                else
                {
                    <div class="modal-footer mt-2">
                        <div class="form-group">
                            <button class="btn btn-default float-right" id="btn-close" data-dismiss="modal">Close</button>
                        </div>
                    </div>
                }
			</div>
		</div>
		<!--/.col-xs-9 -->
	</div>
	<!--/.row -->
</div>



