@model eCoachingLog.ViewModels.ReviewViewModel
<div class="container-fluid" style="height: 100%;">
	<div class="row row-eq-height">
		<div class="col-xs-3 blue-bar">
			@{Html.RenderPartial("_CoachingLogInfo"); }
		</div>
		<!--/.col-xs-3 -->
		<div class="col-xs-9">
			<div class="modal-header">
				<button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
				<h2 class="modal-title">Review</h2>
                @if (Model.ShowFollowupReminder)
                {
                    if (!String.IsNullOrEmpty(Model.LogDetail.FollowupDueDate))
                    {
                        <div class="text-danger"><mark>Please complete follow-up by @Model.LogDetail.FollowupDueDate.</mark></div>
                    }
                }
				@if (!Model.IsReadOnly)
                {
                    Html.RenderPartial("_ReviewModalHeaderCommon");
                }

				<div id="div-error-prompt" class="danger"></div>
			</div>

			<div class="modal-body" style="font-size: small;">
				@{ Html.RenderPartial("_Reasons", Model.LogDetail.Reasons); }
                @{ Html.RenderPartial("_AdditionalText", Model.AdditionalText); }

                @if (!Model.LogDetail.IsQn && !Model.LogDetail.IsQnSupervisor)
				{
				    <div class="mt-2">
                        @{ Html.RenderPartial("_DetailsOfBehavior", Model.LogDetail.BehaviorDetails); }
				    </div>
                    <p class="clear"></p>
					<div class='mt-2 @(Model.ShowConfirmedCseText ? "show" : "hide")'>
						<strong><mark>Coaching Opportunity was a confirmed Customer Service Escalation.</mark></strong><br />
					</div>
					<div class='mt-2 @(Model.ShowConfirmedNonCseText ? "show" : "hide")'>
						<strong><mark>Coaching Opportunity was not a confirmed Customer Service Escalation.</mark></strong><br />
					</div>
				}
				else
				{
					<!-- Display Quality NOW log -->
                    Html.RenderPartial("_Scorecards");
                    if (Model.ShowEvalSummary && Model.QnSummaryAll != null && Model.QnSummaryAll.Trim() != "")
                    {
				        <div class="text-primary"><strong><mark>Evaluation Summary:</mark></strong></div>
				        <div class="text-info">@Model.QnSummaryAll</div>
                    }
                    <!-- QN log submitted by quality specialist, which need to be followed up (monitoring additional activities) -->
                    <!-- 13: Pending Follow-up Employee Review -->
                    if (Model.LogDetail.IsQn && Model.LogDetail.StatusId == 13 && Model.AdditionalActivityLogs != null && Model.AdditionalActivityLogs.Count > 0)
                    {
                        <div class="text-primary" style="margin-top: 5px;"><strong><mark>Additonal Monitoring:</mark></strong></div>
                        for (int i = 0; i < Model.AdditionalActivityLogs.Count; i++)
                        {
                            <a href="#" class="modal-link-overlay" data-log-id="@Model.AdditionalActivityLogs[i].Value" data-is-coaching="true" data-action="viewLinkedQns">&nbsp;@Model.AdditionalActivityLogs[i].Text</a>
                            <br />
                        }
                    }


                    if (Model.ShowFollowupDecisionComments)
                    {
                        { Html.RenderPartial("_QnFollowupDecisionComments"); }
                    }
                }

				<div class="mt-2">
					@if (!Model.IsReadOnly && Model.IsAcknowledgeForm)
					{
						{ Html.RenderPartial("_AcknowledgeCoaching"); }
					}
					else if (!Model.IsReadOnly && Model.IsReviewForm)
					{
						{ Html.RenderPartial("_ReviewCoaching"); }
					}
				</div>
			</div>
			<!-- /.modal-body -->

			<div class="modal-footer" id="div-review-modal-footer">
				<div class="form-group">
					@if (Model.IsReadOnly || (Model.IsFollowupPendingSupervisorForm && !Model.IsFollowupDue && !Model.IsFollowupOverDue))
					{
						<button class="btn btn-default float-right" id="btn-close" data-dismiss="modal">Close</button>
                    }
                    else if (Model.IsAcknowledgeForm || Model.IsReviewForm)
                    {
                        <button type="button" class="btn btn-secondary" data-dismiss="modal">Cancel</button>
						<button class="btn btn-primary float-right" type="submit" id="btn-submit">Submit</button>
					}
				</div>
			</div>
		</div>
		<!--/.col-xs-9 -->
	</div>
	<!--/.row -->
</div>



