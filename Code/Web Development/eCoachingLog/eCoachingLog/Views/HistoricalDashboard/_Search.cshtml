@model eCoachingLog.ViewModels.HistoricalDashboardViewModel
<fieldset class="scheduler-border">
	@*<legend class="scheduler-border"></legend>*@
	<form class="form-inline"  id="form-search-historical">
		<div form-group col-xs-12">
			<div class="col-xs-5" style="padding-bottom: 20px;">
				<lable for="sumitted-date">Submitted:&nbsp;</lable>
				<div class="input-group date">
					@Html.TextBoxFor(m => m.SubmitDateFrom, new { @class = "form-control" })
					<span class="input-group-addon">
						<span class="glyphicon glyphicon-calendar"></span>
					</span>
				</div>
				@Html.ValidationMessageFor(m => m.SubmitDateFrom)
				<div class="input-group date">
					@Html.TextBoxFor(m => m.SubmitDateTo, new { @class = "form-control" })
					<span class="input-group-addon">
						<span class="glyphicon glyphicon-calendar"></span>
					</span>
				</div>
				@Html.ValidationMessageFor(m => m.SubmitDateTo)
			</div>

			<div class="col-xs-3">
				<label class="radio-inline">
					@Html.RadioButtonFor(m => m.ActiveEmployee, "1") Active Employee
				</label>&nbsp;&nbsp;
				<label class="radio-inline">
					@Html.RadioButtonFor(m => m.ActiveEmployee, "2")Inactive Employee
				</label>
				<label class="radio-inline">
					@Html.RadioButtonFor(m => m.ActiveEmployee, "3") Both
				</label>
			</div>
		</div>
		<br />
		<div class="form-group col-xs-12">
			@Html.DropDownListFor(m => m.SiteId, Model.SiteSelectList, new { id = "select-site", @class = "form-control" })
			@Html.DropDownListFor(m => m.Manager.Id, Model.ManagerSelectList, new { id = "select-manager", @class = "form-control" })
			@Html.DropDownListFor(m => m.Supervisor.Id, Model.SupervisorSelectList, new { id = "select-supervisor", @class = "form-control" })
			@Html.DropDownListFor(m => m.Employee.Id, Model.EmployeeSelectList, new { id = "select-employee", @class = "form-control" })
			@Html.DropDownListFor(m => m.Submitter.Id, Model.SubmitterSelectList, new { id = "select-submitter", @class = "form-control" })
			@Html.DropDownListFor(m => m.LogStatus.Id, Model.LogStatusSelectList, new { id = "select-status", @class = "form-control" })
			@Html.DropDownListFor(m => m.LogSource.Id, Model.LogSourceSelectList, new { id = "select-source", @class = "form-control" })
			@Html.DropDownListFor(m => m.LogValue.Id, Model.LogValueSelectList, new { id = "select-value", @class = "form-control" })
			&nbsp;&nbsp;
			<button class="btn btn-info" type="submit" id="btn-search-historical">
				<span class="glyphicon glyphicon-search"></span>&nbsp;Search
			</button>
			<button class="btn btn-warning" type="reset" id="btn-reset">
				<span class="glyphicon glyphicon-remove"></span>&nbsp;Reset
			</button>
		</div>
	</form>
</fieldset>

<script>
	var searchUrl = '@Url.Action("Search", "HistoricalDashboard")';
	var getManagersUrl = '@Url.Action("GetManagersBySite", "HistoricalDashboard")';
	var getSupervisorsUrl = '@Url.Action("GetSupervisorsByMgr", "HistoricalDashboard")';
	var getEmployeesUrl = '@Url.Action("GetEmployeesBySup", "HistoricalDashboard")';

	var resetPageUrl = '@Url.Action("ResetPage", "HistoricalDashboard")';

	var exportToExcelUrl = '@Url.Action("ExportToExcel", "HistoricalDashboard")';
	var downloadExcelUrl = '@Url.Action("Download", "HistoricalDashboard")';
</script>

<script src="@Url.Content("~/Scripts/eCoachingLog/dateTimePicker.js")"></script>
@Scripts.Render("~/bundles/scripts/historicalDashboardSearch")
