@model eCoachingLog.Models.Common.CoachingReason
@{
	Layout = null;
	var rIndex = ViewData["index"];
	var reasonId = "CoachingReasons[" + rIndex + "].IsChecked";
	var valueId = "CoachingReasons[" + rIndex + "].IsOpportunity";
	var subReasonIds = "CoachingReasons[" + rIndex + "].SubReasonIds";
	var subWah = Model.ID == 63 ? "sub-wah" : "";
}
@Html.CheckBoxFor(m => m.IsChecked, new { @class = "reason-checkbox", @Name = reasonId, id = @rIndex})
<input type="hidden" name="reasonIndex" class="reasonIndex" value="@rIndex"/>
<label class="control-label">
	@Html.DisplayTextFor(m => m.Text)
</label>

@if (Model.IsChecked)
{
	<!-- values -->
	<div class='coaching-values'>
		@if (Model.OpportunityOption)
		{
			<div class="col-sm-6">
				@Html.RadioButtonFor(m => m.IsOpportunity, "true", new { @class = "opportunity-radio", @Name= valueId }) Opportunity
			</div>
		}
		@if (Model.ReinforcementOption)
		{
			<div class="col-sm-6">
				@Html.RadioButtonFor(m => m.IsOpportunity, "false", new { @class = "opportunity-radio", @Name = valueId }) Reinforcement
			</div>
		}
	</div>
	<div class="col-sm-12 validation-value">
		@Html.ValidationMessageFor(m => m.IsOpportunity, "", new { @class = "field-validation-error" })
	</div>

	<!-- sub reasons -->
	<div class='col-sm-12 fixed-width wrap-items coaching-subreasons'>
		@Html.ListBoxFor(m => m.SubReasonIds,
								new MultiSelectList(Model.SubReasons, "ID", "Text", Model.SubReasonIds),
								new { @class = "listbox " + @subWah, @Name = subReasonIds, id = subReasonIds })
		@Html.ValidationMessageFor(m => m.SubReasonIds)
	</div>
}

<script>
	$(function () {
        $('.listbox').multiselect({
            includeSelectAllOption: true,
            buttonWidth: '100%'
        });
    })
</script>
