@using eCoachingLog.Utils
@model eCoachingLog.ViewModels.NewSubmissionViewModel
@{
    ViewBag.Title = "New Submission";
}

<div id="success-message" class="alert alert-success alert-dismissible hide">
    <a href="#" class="close" data-dismiss="alert" aria-label="close">&times;</a>
    <div id="message-text">@TempData["SuccessMessage"]</div>
</div>

<div id="fail-message" class="alert alert-danger alert-dismissible hide">
    <a href="#" class="close" data-dismiss="alert" aria-label="close">&times;</a>
    <div id="message-text">@TempData["FailMessage"]</div>
</div>

<h2 class="ecl-page-header">New Submission<span class="danger" style="float: right; font-size: medium;"> Please do NOT include PII or PHI in the log entry.</span> </h2>
@using (Html.BeginForm("Save", "NewSubmission", FormMethod.Post,
				new { id = "new-submission-form", @class = "form-horizontal" }))
{
    <div class="well">
        @Html.AntiForgeryToken()
        <div id="validation-summary" class="text-danger" hidden="hidden">
            <ul></ul>
        </div>
		@Html.HiddenFor(m => m.SiteName)
		@Html.HiddenFor(m => m.IsWorkAtHomeReturnSite)
        <div id="div-new-submission-main">
            @{Html.RenderPartial("_NewSubmission");}
        </div>
    </div>
    <!-- /.well -->
}
<!-- end of Html.Beginform-->

<script>
	const MODULE_LSA = @Constants.MODULE_LSA;
    const successMessage = '@Html.Raw(TempData["SuccessMessage"])';
    const showSuccessMessage = '@Html.Raw(TempData["ShowSuccessMessage"])'
    const showFailMessage = '@Html.Raw(TempData["ShowFailMessage"])'

	var clientValidateCoachingReasons = '@Html.Raw(ViewBag.ClientValidateCoachingReasons)';
	var checkPageDataChanged = true;
	var validationError = '@Html.Raw(ViewBag.ValidationError)';
    var getEmployeesByModuleUrl = '@Url.Action("GetEmployeesByModule", "NewSubmission")';
    var resetPageUrl = '@Url.Action("ResetPage", "NewSubmission")';
    var resetIsCoachingByYouUrl = '@Url.Action("ResetIsCoachingByYou", "NewSubmission")';
    var resetPageBottomUrl = '@Url.Action("ResetPageBottom", "NewSubmission")';
    var loadCoachUrl = '@Url.Action("ShowCoachQuestions", "NewSubmission")';
    var loadWarningReasonsUrl = '@Url.Action("GetWarningReasons", "NewSubmission")';
    var loadCoachingReasonsUrl = '@Url.Action("LoadCoachingReasons", "NewSubmission")';
    var loadSourcesUrl = '@Url.Action("LoadSources", "NewSubmission")';
    // Opportunity/Reinforcement options
    var handleCoachingReasonClicked = '@Url.Action("HandleCoachingReasonClicked", "NewSubmission")';
    var redirectToIndex = '@Url.Action("Index", "NewSubmission")';

    var getMgtInfo = '@Url.Action("GetMgtInfo", "NewSubmission")';
	var handleSiteChangedUrl = '@Url.Action("HandleSiteChanged", "NewSubmission")';
</script>

@Scripts.Render("~/bundles/scripts/newSubmission")
