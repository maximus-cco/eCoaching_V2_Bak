/*

TFS 2182 - LCS Review mgr

Implement in eCoaching database in target environment.


Dev - eCoahingDev
Test - eCoachingTest
Prod - eCoaching
****************************************

IMPLEMENTATION SUMMARY

***************************************


PROCEDURE [EC].[sp_SelectCoaching4Reminder]
FUNCTION FUNCTION [EC].[fn_strSupEmailFromEmpID] 

**********************************************************************************

COPY EVERYTHING INTO AN SSMS WINDOW
POINTING TO THE eCOACHING DB IN TARGET ENVIRONMENT
AND RUN WITH NOTHING SELECTED.

**********************************************************************************/






--*********************************************

--a.sp_SelectCoaching4Reminder

IF EXISTS (
  SELECT * 
    FROM INFORMATION_SCHEMA.ROUTINES 
   WHERE SPECIFIC_SCHEMA = N'EC'
     AND SPECIFIC_NAME = N'sp_SelectCoaching4Reminder' 
)
   DROP PROCEDURE [EC].[sp_SelectCoaching4Reminder]
GO

SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO



--	====================================================================
--	Author:		       Susmitha Palacherla
--	Create Date:	   02/09/2016
--	Description: 	   This procedure queries db for Failed Quality and LCSAT records that are past 
--  the Coaching SLA and sends Reminders to Supervisors and or Managers.
--  Initial revision per TFS Change request 1710 - 02/09/2016
--  Updated to limit to 2 reminders per status per TFS 2145 - 3/2/2016
--  Updated to replace Hierarchy mgr with Review mgr for LCS Mgr recipients per TFS 2182 - 3/8/2016
--	=====================================================================
CREATE PROCEDURE [EC].[sp_SelectCoaching4Reminder]
AS

BEGIN
DECLARE	
@nvcSQL nvarchar(max),
@nvcSQL1 nvarchar(max),
@nvcSQL2 nvarchar(max),
@nvcSQL3 nvarchar(max),
@intHrs1 int,
@intHrs2 int

-- Variables used for the diferent reminder periods.
-- Quality reminders are set at 48 hrs
-- OMR reminders are set at 72 hrs

SET @intHrs1 = 48 
SET @intHrs2 = 72

SET @nvcSQL1 = ';WITH TempMain AS 
        (select DISTINCT x.strFormID 
        ,x.numID 
        ,x.strEmpID 
        ,x.strStatus 
        ,x.strSubCoachingSource
       	,x.strvalue 
       	,x.strMgr
        ,x.Remind 
        ,x.RemindCC 
		,x.NotificationDate	
		,x.ReminderSent	
		,x.ReminderDate	
		,x.ReminderCount   
		,x.ReassignDate   
FROM 
	
-- Verint-GDIT Logs

(SELECT   cl.CoachingID	numID	
		,cl.FormName	strFormID
		,cl.EmpID strEmpID
		,s.Status strStatus
		,so.SubCoachingSource strSubCoachingSource
		,clr.value strValue
		,ISNULL(cl.MgrID,''999999'') strMgr
		,cl.NotificationDate	NotificationDate
		,cl.ReminderSent	ReminderSent
		,cl.ReminderDate	ReminderDate
		,cl.ReminderCount   ReminderCount
		,cl.ReassignDate    ReassignDate 
		, CASE
		WHEN (ReminderSent = ''False'' AND DATEDIFF(HH, ISNULL([ReassignDate],[NotificationDate]),GetDate()) >  '''+CONVERT(VARCHAR,@intHrs1)+''' ) THEN ''Sup''
		WHEN (ReminderSent = ''True'' AND DATEDIFF(HH, [EC].[fnGetMaxDateTime]([ReassignDate],[ReminderDate]),GetDate()) >'''+CONVERT(VARCHAR,@intHrs1)+''' )THEN ''Sup''
		ELSE ''NA'' END Remind
		,CASE
		WHEN (ReminderSent = ''False'' AND DATEDIFF(HH, ISNULL([ReassignDate],[NotificationDate]),GetDate()) > '''+CONVERT(VARCHAR,@intHrs1)+''' ) THEN ''Mgr''
		WHEN (ReminderSent = ''True'' AND DATEDIFF(HH, [EC].[fnGetMaxDateTime]([ReassignDate],[ReminderDate]),GetDate()) > '''+CONVERT(VARCHAR,@intHrs1)+''' )THEN ''Mgr/SrMgr''
		ELSE ''NA'' END RemindCC
FROM  [EC].[Coaching_Log] cl WITH (NOLOCK)
 JOIN [EC].[Coaching_Log_Reason] clr WITH (NOLOCK)
 ON cl.coachingid = clr.coachingid JOIN [EC].[DIM_Status] s
ON cl.StatusID = s.StatusID JOIN [EC].[DIM_Source] so
ON cl.SourceID = so.SourceID
WHERE cl.Statusid = 6
AND cl.SourceID = 223
AND cl.EmailSent = ''True''
AND clr.Value   = ''Did not meet goal''
AND ((ReminderSent = ''False'' AND DATEDIFF(HH, ISNULL([ReassignDate],[NotificationDate]),GetDate()) > '''+CONVERT(VARCHAR,@intHrs1)+''' )OR
(ReminderSent = ''True'' AND [ReminderCount] < 2 AND DATEDIFF(HH, [EC].[fnGetMaxDateTime]([ReassignDate],[ReminderDate]),GetDate()) > '''+CONVERT(VARCHAR,@intHrs1)+''' ))'

-- LCS OMR Logs

SET @nvcSQL2 = ' UNION
SELECT   cl.CoachingID	numID	
			,cl.FormName	strFormID
		,cl.EmpID strEmpID
		,s.Status strStatus
		,so.SubCoachingSource strSubCoachingSource
		,clr.value strValue
		,ISNULL(cl.MgrID,''999999'') strMgr
		,cl.NotificationDate	NotificationDate
		,cl.ReminderSent	ReminderSent
		,cl.ReminderDate	ReminderDate
		,cl.ReminderCount   ReminderCount
		,cl.ReassignDate    ReassignDate 
		, CASE
		WHEN (ReminderSent = ''False'' AND cl.Statusid = 5 AND DATEDIFF(HH, ISNULL([ReassignDate],[NotificationDate]),GetDate()) > '''+CONVERT(VARCHAR,@intHrs2)+''') THEN ''ReviewMgr''
		WHEN (ReminderSent = ''True'' AND cl.Statusid = 5 AND DATEDIFF(HH, [EC].[fnGetMaxDateTime]([ReassignDate],[ReminderDate]),GetDate()) > '''+CONVERT(VARCHAR,@intHrs2)+''')THEN ''ReviewMgr''
		WHEN (ReminderSent = ''False'' AND cl.Statusid = 6 AND DATEDIFF(HH, ISNULL([ReassignDate],[MgrReviewAutoDate]),GetDate()) > '''+CONVERT(VARCHAR,@intHrs2)+''')THEN ''Sup''
		WHEN (ReminderSent = ''True'' AND cl.Statusid = 6 AND DATEDIFF(HH, [EC].[fnGetMaxDateTime]([ReassignDate],[ReminderDate]),GetDate()) > '''+CONVERT(VARCHAR,@intHrs2)+''')THEN ''Sup''
		ELSE ''NA'' END Remind
	  , CASE
		WHEN (ReminderSent = ''False'' AND cl.Statusid = 5 AND DATEDIFF(HH, ISNULL([ReassignDate],[NotificationDate]),GetDate()) > '''+CONVERT(VARCHAR,@intHrs2)+''') THEN ''ReviewSrMgr''
		WHEN (ReminderSent = ''True'' AND cl.Statusid = 5 AND DATEDIFF(HH, [EC].[fnGetMaxDateTime]([ReassignDate],[ReminderDate]),GetDate()) > '''+CONVERT(VARCHAR,@intHrs2)+''')THEN ''ReviewSrMgr''
		WHEN (ReminderSent = ''False'' AND cl.Statusid = 6 AND DATEDIFF(HH, ISNULL([ReassignDate],[MgrReviewAutoDate]),GetDate()) > '''+CONVERT(VARCHAR,@intHrs2)+''')THEN ''Mgr''
		WHEN (ReminderSent = ''True'' AND cl.Statusid = 6 AND DATEDIFF(HH, [EC].[fnGetMaxDateTime]([ReassignDate],[ReminderDate]),GetDate()) > '''+CONVERT(VARCHAR,@intHrs2)+''')THEN ''Mgr/SrMgr''
		ELSE ''NA'' END RemindCC
FROM  [EC].[Coaching_Log] cl WITH (NOLOCK)
 JOIN [EC].[Coaching_Log_Reason] clr WITH (NOLOCK)
 ON cl.coachingid = clr.coachingid JOIN [EC].[DIM_Status] s
ON cl.StatusID = s.StatusID JOIN [EC].[DIM_Source] so
ON cl.SourceID = so.SourceID
WHERE clr.SubCoachingreasonID = 34 
AND ((cl.Statusid = 5 AND clr.Value   = ''Research Required'') OR 
(cl.Statusid = 6 AND clr.Value   = ''Opportunity''))
AND cl.EmailSent = ''True''
AND ((ReminderSent = ''False'' AND cl.Statusid = 5 AND DATEDIFF(HH, ISNULL([ReassignDate],[NotificationDate]),GetDate()) > '''+CONVERT(VARCHAR,@intHrs2)+''')OR
(ReminderSent = ''True'' AND [ReminderCount] < 2 AND DATEDIFF(HH, [EC].[fnGetMaxDateTime]([ReassignDate],[ReminderDate]),GetDate()) > '''+CONVERT(VARCHAR,@intHrs2)+''')OR
(ReminderSent = ''False'' AND cl.Statusid = 6 AND DATEDIFF(HH, ISNULL([ReassignDate],[MgrReviewAutoDate]),GetDate()) > '''+CONVERT(VARCHAR,@intHrs2)+'''))'


SET @nvcSQL3 = 
 ' ) x )SELECT 
         numid CoachingID
        ,strFormID
		,strStatus
		,strSubCoachingSource
		,strValue
		 ,CASE WHEN Remind = ''Sup'' THEN eh.Sup_Email	
		      WHEN Remind = ''Mgr'' THEN eh.Mgr_Email
		      WHEN Remind = ''ReviewMgr'' Then [EC].[fn_strEmpEmailFromEmpID](strMgr)
		      ELSE '''' END strToEmail
		,CASE WHEN RemindCC = ''Mgr'' THEN eh.Mgr_Email	
		      WHEN RemindCC = ''SrMgr'' THEN [EC].[fn_strEmpEmailFromEmpID](eh.SrMgrLvl1_ID)
		      WHEN RemindCC = ''ReviewSrMgr'' THEN [EC].[fn_strSupEmailFromEmpID](strMgr)
		      WHEN RemindCC = ''Mgr/SrMgr'' THEN eh.Mgr_Email + '';'' +[EC].[fn_strEmpEmailFromEmpID](eh.SrMgrLvl1_ID)
		      ELSE '''' END strCCEmail
		 ,NotificationDate	
		,ReminderSent	
		,ReminderDate	
		,ReminderCount   
		,ReassignDate
	   	FROM TempMain T JOIN [EC].[Employee_Hierarchy] eh 
	   	ON T.strEmpID  = eh.Emp_ID
	   	WHERE (eh.Sup_Email is not NULL OR eh.Sup_Email <> '''' OR eh.Mgr_Email is not NULL OR eh.Mgr_Email <> '''')
	   	ORDER BY NotificationDate desc'

        
SET @nvcSQL = @nvcSQL1 + @nvcSQL2 +  @nvcSQL3 
EXEC (@nvcSQL)	
	    
--PRINT @nvcsql  
	    
END --sp_SelectCoaching4Reminder





GO







--*********************************************

IF EXISTS (
  SELECT * 
    FROM INFORMATION_SCHEMA.ROUTINES 
   WHERE SPECIFIC_SCHEMA = N'EC'
     AND SPECIFIC_NAME = N'fn_strSupEmailFromEmpID' 
)
   DROP FUNCTION [EC].[fn_strSupEmailFromEmpID]
GO


SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO


-- =============================================
-- Author:		Susmitha Palacherla
-- Create date: 3/8/2016
-- Description:	Given an Employee ID, fetches the Email address of the Employee's Supervisor from the  Hierarchy table.
-- If no match is found returns 'Unknown'
-- Initial version : TFS 2182 for fetching Review Managers Supervisor Email for LCS Reminders.
-- =============================================
CREATE FUNCTION [EC].[fn_strSupEmailFromEmpID] 
(
	@strEmpId nvarchar(20)  --Emp ID of person 
)
RETURNS NVARCHAR(50)
AS
BEGIN
	DECLARE 
	  @strSupEmpID nvarchar(10)
	  ,@strSupEmail nvarchar(50)

  SET @strSupEmpID = (SELECT Sup_ID
  FROM [EC].[Employee_Hierarchy]
  WHERE [Emp_ID] = @strEmpID)
  
  IF     (@strSupEmpID IS NULL OR @strSupEmpID = 'Unknown')
  SET    @strSupEmpID = N'999999'
  
 SET @strSupEmail = (SELECT Emp_Email
  FROM [EC].[Employee_Hierarchy]
  WHERE Emp_ID = @strSupEmpID)
  
  IF  @strSupEmail IS NULL 
  SET @strSupEmail = N'UnKnown'
  
  RETURN  @strSupEmail 
END -- fn_strSupEmailFromEmpID



GO


