/*



Implementation Instructions for TFS 3923

1. My Dashboard procedures
SelectFrom_Coaching_Log_CSRPending 
SelectFrom_Coaching_Log_CSRCompleted 

SelectFrom_Coaching_Log_SUPPending 
SelectFrom_Coaching_Log_SUPCSRPending 
SelectFrom_Coaching_Log_SUPCSRCompleted 

SelectFrom_Coaching_Log_MGRPending 
SelectFrom_Coaching_Log_MGRCSRPending 
SelectFrom_Coaching_Log_MGRCSRCompleted 


SelectFrom_Warning_Log_MGRCSRCompleted 
SelectFrom_Warning_Log_SUPCSRCompleted 



--****************************************************************************************************************************
-- COPY ENTIRE CODE FROM HERE ON INTO AN SSMS WINDOW POINTING TO eCOACHING DB AND RUN WITH NOTHING SELECTED.
--****************************************************************************************************************************/


--1. sp_SelectFrom_Coaching_Log_CSRPending


IF EXISTS (
  SELECT * 
    FROM INFORMATION_SCHEMA.ROUTINES 
   WHERE SPECIFIC_SCHEMA = N'EC'
     AND SPECIFIC_NAME = N'sp_SelectFrom_Coaching_Log_CSRPending' 
)
   DROP PROCEDURE [EC].[sp_SelectFrom_Coaching_Log_CSRPending]
GO



SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO

--	====================================================================
--	Author:			Susmitha Palacherla
--	Create Date:	11/16/2011
--  Description: Displays an Employees Pending logs in the My Dashboard.
-- Last Updated By: Susmitha Palacherla
-- Last Modified Date: 04/16/2015
-- Modified during dashboard redesign SCR 14422.
-- 1. To Replace old style joins.
-- 2. Lan ID association by date.
-- Modified per TFS 3598 to add Coaching Reason fields and use sp_executesql - 8/15/2016
-- Modified per TFS 3923 to fix slow running stored procedures in my dashboard - 9/22/2016
--	=====================================================================
CREATE PROCEDURE [EC].[sp_SelectFrom_Coaching_Log_CSRPending] @strCSRin nvarchar(30)
AS

BEGIN

SET NOCOUNT ON

DECLARE	
@nvcSQL nvarchar(max),
@ParmDefinition NVARCHAR(1000),
@strFormStatus nvarchar(30),
@strFormStatus2 nvarchar(30),
@nvcEmpID Nvarchar(10),
@dtmDate datetime

 SET @dtmDate  = GETDATE()   
 SET @nvcEmpID = EC.fn_nvcGetEmpIdFromLanID(@strCSRin,@dtmDate)
 SET @strFormStatus = 'Pending Employee Review'
 SET @strFormStatus2 = 'Pending Acknowledgement'

SET @nvcSQL = 'WITH TempMain AS 
(SELECT DISTINCT x.strFormID
				,x.strCoachingID
				,x.strCSRName
				,x.strFormStatus
			    ,x.SubmittedDate				  
FROM (SELECT [cl].[FormName]	strFormID,
        [cl].[CoachingID]	strCoachingID,
		[eh].[Emp_Name]	strCSRName,
		[s].[Status]	strFormStatus,
		[cl].[SubmittedDate]	SubmittedDate
FROM [EC].[Employee_Hierarchy] eh JOIN [EC].[Coaching_Log] cl WITH(NOLOCK) ON
cl.EmpID = eh.Emp_ID JOIN [EC].[DIM_Status] s ON 
cl.StatusID = s.StatusID
where  cl.EmpID = @nvcEmpIDparam 
and ([S].[Status] = '''+@strFormStatus+''' or [S].[Status] = '''+@strFormStatus2+''')
and cl.EmpID <> ''999999''
GROUP BY [cl].[FormName],[cl].[CoachingID],[eh].[Emp_Name],
[S].[Status],[cl].[SubmittedDate])X )

SELECT strFormID
		,strCSRName
	   	,strFormStatus
	   	,SubmittedDate
	    ,[EC].[fn_strCoachingReasonFromCoachingID](T.strCoachingID) strCoachingReason
	    ,[EC].[fn_strSubCoachingReasonFromCoachingID](T.strCoachingID)strSubCoachingReason
	    ,[EC].[fn_strValueFromCoachingID](T.strCoachingID)strValue	
	     FROM TempMain T              
		 ORDER BY SubmittedDate DESC' 


SET @ParmDefinition = N'@nvcEmpIDparam  nvarchar(10)'
		
--EXEC (@nvcSQL)	

EXECUTE sp_executesql @nvcSQL, @ParmDefinition,
                     @nvcEmpIDparam = @nvcEmpID;
	    

If @@ERROR <> 0 GoTo ErrorHandler
    Set NoCount OFF
    Return(0)
  
ErrorHandler:
    Return(@@ERROR)
	    
END --sp_SelectFrom_Coaching_Log_CSRPending

GO








--**************************************************

--2. sp_SelectFrom_Coaching_Log_CSRCompleted


IF EXISTS (
  SELECT * 
    FROM INFORMATION_SCHEMA.ROUTINES 
   WHERE SPECIFIC_SCHEMA = N'EC'
     AND SPECIFIC_NAME = N'sp_SelectFrom_Coaching_Log_CSRCompleted' 
)
   DROP PROCEDURE [EC].[sp_SelectFrom_Coaching_Log_CSRCompleted]
GO


SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO

--	====================================================================
-- Author:			Susmitha Palacherla
-- Create Date:	11/16/11
-- Description: Displays an Employee's Completed logs in the My Dashboard.
-- Last Modified Date: 04/16/2015
-- Last Updated By: Susmitha Palacherla
-- Modified during dashboard redesign SCR 14422.
-- 1. To Replace old style joins.
-- 2. Lan ID association by date.
-- Modified per TFS 3598 to add Coaching Reason fields and use sp_executesql - 8/15/2016
-- Modified per TFS 3923 to fix slow running stored procedures in my dashboard - 9/22/2016
--	=====================================================================
CREATE PROCEDURE [EC].[sp_SelectFrom_Coaching_Log_CSRCompleted] @strCSRin nvarchar(30)
AS


BEGIN

SET NOCOUNT ON

DECLARE	
@nvcSQL nvarchar(max),
@ParmDefinition NVARCHAR(1000),
@strFormStatus nvarchar(30),
@nvcEmpID Nvarchar(10),
@dtmDate datetime

 SET @dtmDate  = GETDATE()   
 SET @nvcEmpID = EC.fn_nvcGetEmpIdFromLanID(@strCSRin,@dtmDate)
 SET @strFormStatus = 'Completed'

SET @nvcSQL = 'WITH TempMain AS 
(SELECT DISTINCT x.strFormID
				,x.strCoachingID
				,x.strCSRName
				,x.strCSRSupName
				,x.strCSRMgrName
				,x.strFormStatus
			    ,x.SubmittedDate				  
FROM (SELECT [cl].[FormName]	strFormID,
        [cl].[CoachingID]	strCoachingID,
		[eh].[Emp_Name]	strCSRName,
		[eh].[Sup_Name] strCSRSupName, 
		[eh].[Mgr_Name]	strCSRMgrName, 
		[s].[Status]	strFormStatus,
		[cl].[SubmittedDate]	SubmittedDate
		FROM [EC].[Employee_Hierarchy] eh JOIN [EC].[Coaching_Log] cl WITH(NOLOCK) ON
cl.EmpID = eh.Emp_ID JOIN [EC].[DIM_Status] s ON 
cl.StatusID = s.StatusID
where cl.EmpID = @nvcEmpIDparam 
and [S].[Status] = '''+@strFormStatus+'''
and  cl.EmpID <> ''999999''
GROUP BY [cl].[FormName],[cl].[CoachingID],[eh].[Emp_Name],[eh].[Sup_Name] ,
[eh].[Mgr_Name],[S].[Status],[cl].[SubmittedDate])X )

SELECT strFormID
		,strCSRName
		,strCSRSupName
		,strCSRMgrName
	   	,strFormStatus
	   	,SubmittedDate
	    ,[EC].[fn_strCoachingReasonFromCoachingID](T.strCoachingID) strCoachingReason
	    ,[EC].[fn_strSubCoachingReasonFromCoachingID](T.strCoachingID)strSubCoachingReason
	    ,[EC].[fn_strValueFromCoachingID](T.strCoachingID)strValue	
	     FROM TempMain T              
		 ORDER BY SubmittedDate DESC' 


		
SET @ParmDefinition = N'@nvcEmpIDparam  nvarchar(10)'
		
--EXEC (@nvcSQL)	

EXECUTE sp_executesql @nvcSQL, @ParmDefinition,
                     @nvcEmpIDparam = @nvcEmpID;
	    

If @@ERROR <> 0 GoTo ErrorHandler
    Set NoCount OFF
    Return(0)
  
ErrorHandler:
    Return(@@ERROR)
	    
END --sp_SelectFrom_Coaching_Log_CSRCompleted

GO

--**************************************************

--3. sp_SelectFrom_Coaching_Log_SUPPending


IF EXISTS (
  SELECT * 
    FROM INFORMATION_SCHEMA.ROUTINES 
   WHERE SPECIFIC_SCHEMA = N'EC'
     AND SPECIFIC_NAME = N'sp_SelectFrom_Coaching_Log_SUPPending' 
)
   DROP PROCEDURE [EC].[sp_SelectFrom_Coaching_Log_SUPPending]
GO


SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO

--	====================================================================
--	Author:			Susmitha Palacherla
--	Create Date:	11/16/11
--	Description: This procedure selects the Pending e-Coaching records 
--  for a given Supervisor in the Supervisor Dashboard.
-- Last Updated By: Susmitha Palacherla
-- Modified per SCR 14422 during dashboard resdesign - 6/16/2016
-- 1. To Replace old style joins.
-- 2. Lan ID association by date.
-- Modified per TFS 1710 Admin Tool setup - 5/2/2016
-- Modified per TFS 2268 CTC feed to add "Pending Acknowledgement" to filter - 5/2/2016
-- Modified per TFS 3598 to add Coaching Reason fields and use sp_executesql - 8/15/2016
-- Modified per TFS 3923 to fix slow running stored procedures in my dashboard - 9/22/2016
--	=====================================================================
CREATE PROCEDURE [EC].[sp_SelectFrom_Coaching_Log_SUPPending] @strCSRSUPin nvarchar(30)
AS


BEGIN
Set NoCount ON
DECLARE	
@nvcSQL nvarchar(max),
@ParmDefinition NVARCHAR(1000),
@strFormStatus1 nvarchar(30),
@strFormStatus2 nvarchar(30),
@strFormStatus3 nvarchar(30),
@strFormStatus4 nvarchar(30),
@strFormStatus5 nvarchar(30),
@nvcSUPID Nvarchar(10),
@dtmDate datetime

 Set @strFormStatus1 = 'Pending Supervisor Review'
 Set @strFormStatus2 = 'Pending Acknowledgement'
 Set @strFormStatus3 = 'Pending Manager Review'
 Set @strFormStatus4 = 'Pending Quality Lead Review'
 Set @strFormStatus5 = 'Pending Employee Review'
 Set @dtmDate  = GETDATE()   
 Set @nvcSUPID = EC.fn_nvcGetEmpIdFromLanID(@strCSRSUPin,@dtmDate)
 
SET @nvcSQL = 'WITH TempMain AS 
                (SELECT DISTINCT x.strFormID
				,x.strCoachingID
				,x.strCSR
				,x.strCSRName
				,x.strCSRSupName
				,x.strFormStatus
				,x.SubmittedDate
			FROM (SELECT [cl].[FormName] strFormID,
			[cl].[CoachingID]strCoachingID,
			[eh].[Emp_LanID] strCSR,
			[eh].[Emp_Name]	strCSRName,
			[eh].[Sup_Name] strCSRSupName,
			[S].[Status]	strFormStatus,
			[cl].[SubmittedDate] SubmittedDate
			FROM [EC].[Employee_Hierarchy] eh JOIN [EC].[Coaching_Log] cl WITH (NOLOCK) ON
cl.EmpID = eh.Emp_ID JOIN [EC].[DIM_Status] s ON 
cl.StatusID = s.StatusID
WHERE (
([ReassignCount]= 0 AND (eh.[Sup_ID] = @nvcSUPIDparam OR eh.[Mgr_ID] = @nvcSUPIDparam)
AND ([S].[Status] = '''+@strFormStatus1+''' OR [S].[Status] = '''+@strFormStatus2+'''OR [S].[Status] = '''+@strFormStatus3+'''OR [S].[Status] = '''+@strFormStatus4+'''))
OR (cl.[ReassignedToId] = @nvcSUPIDparam AND [ReassignCount]<> 0 AND [S].[Status] = '''+@strFormStatus1+''')
OR (eh.[Emp_ID] = @nvcSUPIDparam AND [S].[Status] = '''+@strFormStatus2+''')
OR (eh.[Emp_ID] = @nvcSUPIDparam AND [S].[Status] = '''+@strFormStatus5+''')
)
AND '''+@nvcSUPID+'''  <> ''999999''
GROUP BY [cl].[FormName],[cl].[CoachingID],[eh].[Emp_LanID],[eh].[Emp_Name],[eh].[Sup_Name],
[S].[Status],[cl].[SubmittedDate])
X )

SELECT strFormID
		,strCSR
		,strCSRName
		,strCSRSupName
	   	,strFormStatus
		,SubmittedDate
	    ,[EC].[fn_strCoachingReasonFromCoachingID](T.strCoachingID) strCoachingReason
	    ,[EC].[fn_strSubCoachingReasonFromCoachingID](T.strCoachingID)strSubCoachingReason
	    ,[EC].[fn_strValueFromCoachingID](T.strCoachingID)strValue	        
		FROM TempMain T
		ORDER BY SubmittedDate DESC'
        		

SET @ParmDefinition = N'@nvcSUPIDparam nvarchar(10)'
		
--EXEC (@nvcSQL)	
--Print @nvcSQL

EXECUTE sp_executesql @nvcSQL, @ParmDefinition,
                     @nvcSUPIDparam = @nvcSUPID;


If @@ERROR <> 0 GoTo ErrorHandler
    Set NoCount OFF
    Return(0)
  
ErrorHandler:
    Return(@@ERROR)
	    
END --sp_SelectFrom_Coaching_Log_SUPPending

GO





--*************************************************************************************************

--4. sp_SelectFrom_Coaching_Log_SUPCSRPending



IF EXISTS (
  SELECT * 
    FROM INFORMATION_SCHEMA.ROUTINES 
   WHERE SPECIFIC_SCHEMA = N'EC'
     AND SPECIFIC_NAME = N'sp_SelectFrom_Coaching_Log_SUPCSRPending' 
)
   DROP PROCEDURE [EC].[sp_SelectFrom_Coaching_Log_SUPCSRPending]
GO



SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO


--	====================================================================
--	Author:			Susmitha Palacherla
--	Create Date:	11/16/2011
--	Description: This procedure selects the pending e-Coaching records 
--  for a given supervisor's employees in the supervisor Dashboard.
-- Last Updated By: Susmitha Palacherla
-- Last Modified Date:04/16/2015
-- Modified during dashboard redesign SCR 14422.
-- 1. To Replace old style joins.
-- 2. Lan ID association by date.
-- Modified per TFS 3598 to add Coaching Reason fields and use sp_executesql - 8/15/2016
-- Modified per TFS 3923 to fix slow running stored procedures in my dashboard - 9/22/2016
--	=====================================================================
CREATE PROCEDURE [EC].[sp_SelectFrom_Coaching_Log_SUPCSRPending] 

@strCSRSUPin nvarchar(30),
@strCSRin nvarchar(30), 
@strSourcein nvarchar(100)

AS

BEGIN
Set NoCount ON

DECLARE	
@nvcSQL nvarchar(max),
@ParmDefinition NVARCHAR(1000),
@nvcSUPID Nvarchar(10),
@dtmDate datetime

Set @dtmDate  = GETDATE()   
Set @nvcSUPID = EC.fn_nvcGetEmpIdFromLanID(@strCSRSUPin,@dtmDate)

Set @nvcSQL = 'WITH TempMain AS 
(SELECT DISTINCT x.strFormID
				,x.strCoachingID
				,x.strCSRName
				,x.strCSRSupName
				,x.strCSRMgrName
				,x.strFormStatus
				,x.strSource
				,x.SubmittedDate
FROM (SELECT [cl].[FormName]	strFormID,
		[cl].[CoachingID]strCoachingID,
		[eh].[Emp_Name]	strCSRName,
		[eh].[Sup_Name]	strCSRSupName, 
		[eh].[Mgr_Name]	strCSRMgrName, 
		[s].[Status]	strFormStatus,
		[sc].[SubCoachingSource]	strSource,
		[cl].[SubmittedDate]	SubmittedDate
FROM [EC].[Employee_Hierarchy] eh JOIN [EC].[Coaching_Log] cl WITH (NOLOCK)
ON cl.EmpID = eh.Emp_ID JOIN [EC].[DIM_Status] s
ON cl.StatusID = s.StatusID JOIN [EC].[DIM_Source] sc
ON cl.SourceID = sc.SourceID 
where [eh].[Sup_ID] = @nvcSUPIDparam 
and [S].[Status] like ''Pending%''
and RTRIM(LTRIM([eh].[Emp_Name])) Like @strCSRinparam
and [sc].[SubCoachingSource] Like @strSourceinparam
and [eh].[Sup_ID] <> ''999999''
GROUP BY [cl].[FormName],[cl].[CoachingID],[eh].[Emp_Name],[eh].[Sup_Name],
[eh].[Mgr_Name],[S].[Status],[sc].[SubCoachingSource],[cl].[SubmittedDate]
) x )
	SELECT strFormID
		,strCSRName
		,strCSRSupName
		,strCSRMgrName
	   	,strFormStatus
	   	,strSource
		,SubmittedDate
	    ,[EC].[fn_strCoachingReasonFromCoachingID](T.strCoachingID) strCoachingReason
	    ,[EC].[fn_strSubCoachingReasonFromCoachingID](T.strCoachingID)strSubCoachingReason
	    ,[EC].[fn_strValueFromCoachingID](T.strCoachingID)strValue	      
		FROM TempMain T
  ORDER BY SubmittedDate DESC'
	
SET @ParmDefinition = N'@nvcSUPIDparam nvarchar(10),@strCSRinparam nvarchar(30), @strSourceinparam nvarchar(100)'
		
--EXEC (@nvcSQL)	
--PRINT @nvcSQL

EXECUTE sp_executesql @nvcSQL, @ParmDefinition,
@nvcSUPIDparam = @nvcSUPID,@strCSRinparam = @strCSRin, @strSourceinparam = @strSourcein;


	    
If @@ERROR <> 0 GoTo ErrorHandler
    Set NoCount OFF
    Return(0)
  
ErrorHandler:
    Return(@@ERROR)
	    
END --sp_SelectFrom_Coaching_Log_SUPCSRPending

GO


--**************************************************

--5. sp_SelectFrom_Coaching_Log_SUPCSRCompleted


IF EXISTS (
  SELECT * 
    FROM INFORMATION_SCHEMA.ROUTINES 
   WHERE SPECIFIC_SCHEMA = N'EC'
     AND SPECIFIC_NAME = N'sp_SelectFrom_Coaching_Log_SUPCSRCompleted' 
)
   DROP PROCEDURE [EC].[sp_SelectFrom_Coaching_Log_SUPCSRCompleted]
GO


SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO

--	====================================================================
--	Author:			Susmitha Palacherla
--	Create Date:	11/16/2011
--	Description: This procedure selects the completed e-Coaching records 
--  for a given supervisor's employees in the supervisor Dashboard.
-- Last Updated By: Susmitha Palacherla
-- Last Modified Date:04/16/2015
-- Modified during dashboard redesign SCR 14422.
-- 1. To Replace old style joins.
-- 2. Lan ID association by date.
-- Modified per TFS 3598 to add Coaching Reason fields and use sp_executesql - 8/15/2016
-- Modified per TFS 3923 to fix slow running stored procedures in my dashboard - 9/22/2016
--	=====================================================================
CREATE PROCEDURE [EC].[sp_SelectFrom_Coaching_Log_SUPCSRCompleted] 
@strSourcein nvarchar(100),
@strCSRSUPin nvarchar(30),
@strCSRin nvarchar(30),
@strCSRMGRin nvarchar(30),
@strSDatein datetime,
@strEDatein datetime

AS

BEGIN
Set NoCount ON

DECLARE	
@nvcSQL nvarchar(max),
@ParmDefinition NVARCHAR(1000),
@strFormStatus nvarchar(30),
@strSDate nvarchar(8),
@strEDate nvarchar(8),
@nvcSUPID Nvarchar(10),
@dtmDate datetime


Set @strFormStatus = 'Completed'
Set @strSDate = convert(varchar(8),@strSDatein,112)
Set @strEDate = convert(varchar(8),@strEDatein,112)
Set @dtmDate  = GETDATE()   
Set @nvcSUPID = EC.fn_nvcGetEmpIdFromLanID(@strCSRSUPin,@dtmDate)

SET @nvcSQL = 'WITH TempMain AS 
(SELECT DISTINCT x.strFormID
				,x.strCoachingID
				,x.strCSRName
				,x.strCSRSupName
				,x.strCSRMgrName
				,x.strFormStatus
				,x.strSource
				,x.SubmittedDate				  
FROM (SELECT	[cl].[FormName]	strFormID,
        [cl].[CoachingID]	strCoachingID,
		[eh].[Emp_Name]	strCSRName,
		[eh].[Sup_Name]	strCSRSupName, 
		[eh].[Mgr_Name]	strCSRMgrName, 
		[s].[Status]	strFormStatus,
		[sc].[SubCoachingSource]	strSource,
		[cl].[SubmittedDate]	SubmittedDate
FROM [EC].[Employee_Hierarchy] eh JOIN [EC].[Coaching_Log] cl WITH (NOLOCK)
ON cl.EmpID = eh.Emp_ID JOIN [EC].[DIM_Status] s
ON cl.StatusID = s.StatusID JOIN [EC].[DIM_Source] sc
ON cl.SourceID = sc.SourceID 
where [eh].[Sup_ID] = @nvcSUPIDinparam 
and [eh].[Mgr_Name] Like @strCSRMGRinparam
and [S].[Status] = '''+@strFormStatus+'''
and [eh].[Emp_Name] Like @strCSRinparam
and [sc].[SubCoachingSource] Like @strSourceinparam
and convert(varchar(8),[cl].[SubmittedDate],112) >= @strSDateinparam
and convert(varchar(8),[cl].[SubmittedDate],112) <= @strEDateinparam
and [eh].[Sup_ID] <> ''999999''
GROUP BY [cl].[FormName],[cl].[CoachingID],[eh].[Emp_Name],[eh].[Sup_Name],
[eh].[Mgr_Name],[S].[Status],[sc].[SubCoachingSource],[cl].[SubmittedDate]
) x )


	SELECT strFormID
		,strCSRName
		,strCSRSupName
		,strCSRMgrName
	   	,strFormStatus
	   	,strSource
		,SubmittedDate
	    ,[EC].[fn_strCoachingReasonFromCoachingID](T.strCoachingID) strCoachingReason
	    ,[EC].[fn_strSubCoachingReasonFromCoachingID](T.strCoachingID)strSubCoachingReason
	    ,[EC].[fn_strValueFromCoachingID](T.strCoachingID)strValue	
	     FROM TempMain T              
		 ORDER BY SubmittedDate DESC' 
		

SET @ParmDefinition = N'@nvcSUPIDinparam nvarchar(10),@strCSRinparam nvarchar(30), @strSourceinparam nvarchar(100),
@strCSRMGRinparam nvarchar(30),@strSDateinparam datetime, @strEDateinparam datetime'	
--EXEC (@nvcSQL)	
--PRINT @nvcSQL

EXECUTE sp_executesql @nvcSQL, @ParmDefinition,
@nvcSUPIDinparam = @nvcSUPID,@strCSRinparam = @strCSRin, @strSourceinparam = @strSourcein,
@strCSRMGRinparam = @strCSRMGRin,@strSDateinparam = @strSDatein, @strEDateinparam = @strEDatein;
	    
	    
If @@ERROR <> 0 GoTo ErrorHandler
    Set NoCount OFF
    Return(0)
  
ErrorHandler:
    Return(@@ERROR)
	    
END --sp_SelectFrom_Coaching_Log_SUPCSRCompleted

GO



--**************************************************

--6. sp_SelectFrom_Coaching_Log_MGRPending

IF EXISTS (
  SELECT * 
    FROM INFORMATION_SCHEMA.ROUTINES 
   WHERE SPECIFIC_SCHEMA = N'EC'
     AND SPECIFIC_NAME = N'sp_SelectFrom_Coaching_Log_MGRPending' 
)
   DROP PROCEDURE [EC].[sp_SelectFrom_Coaching_Log_MGRPending]
GO


SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO


--	====================================================================
--	Author:			Susmitha Palacherla
--	Create Date:	11/16/11
--	Description: This procedure selects the Pending e-Coaching records 
--  for a given Manager in the Manager Dashboard.
-- Last Updated By: Susmitha Palacherla
-- Modified per SCR 14422 during dashboard resdesign - 04/16/2015
-- 1. To Replace old style joins.
-- 2. Lan ID association by date.
-- Updated per SCR 14818 to support rotating managers for Low CSAT - 05/22/2015
-- Modified per TFS 1710 Admin Tool setup - 5/2/2016
-- Modified per TFS 3598 to add Coaching Reason fields and use sp_executesql - 8/15/2016
-- Modified per TFS 3923 to fix slow running stored procedures in my dashboard - 9/22/2016
--	=====================================================================
CREATE PROCEDURE [EC].[sp_SelectFrom_Coaching_Log_MGRPending] 
@strCSRMGRin nvarchar(30),
@strCSRin nvarchar(30),
@strCSRSUPin nvarchar(30) 

AS

BEGIN
DECLARE	
@nvcSQL nvarchar(max),
@strFormStatus1 nvarchar(50),
@strFormStatus2 nvarchar(50),
@strFormStatus3 nvarchar(50),
@strFormStatus4 nvarchar(50),
@strFormStatus5 nvarchar(50),
@strFormStatus6 nvarchar(50),
@nvcMGRID Nvarchar(10),
@dtmDate datetime



 Set @strFormStatus1 = 'Pending Manager Review'
 Set @strFormStatus2 = 'Pending Supervisor Review'
 Set @strFormStatus3 = 'Pending Acknowledgement'
 Set @strFormStatus4 = 'Pending Sr. Manager Review'
 Set @strFormStatus5 = 'Pending Deputy Program Manager Review'
 Set @strFormStatus6 = 'Pending Quality Lead Review'
 Set @dtmDate  = GETDATE()   
 Set @nvcMGRID = EC.fn_nvcGetEmpIdFromLanID(@strCSRMGRin,@dtmDate)

 
SET @nvcSQL = 'SELECT [cl].[FormName]	strFormID,
		[eh].[Emp_LanID] strCSR,
		[eh].[Emp_Name]	strCSRName,
		[eh].[Sup_Name]	strCSRSupName, 
		[s].[Status]	strFormStatus,
		[cl].[SubmittedDate]	SubmittedDate,
		[EC].[fn_strCoachingReasonFromCoachingID]([cl].[CoachingID]) strCoachingReason,
	    [EC].[fn_strSubCoachingReasonFromCoachingID]([cl].[CoachingID])strSubCoachingReason,
	    [EC].[fn_strValueFromCoachingID]([cl].[CoachingID])strValue
FROM [EC].[Employee_Hierarchy] eh JOIN [EC].[Coaching_Log] cl WITH (NOLOCK) ON
cl.EmpID = eh.Emp_ID JOIN [EC].[DIM_Status] s ON 
cl.StatusID = s.StatusID
WHERE [eh].[Emp_Name] Like '''+@strCSRin+'''
AND [eh].[Sup_Name] Like '''+@strCSRSUPin+'''
AND (((ISNULL([cl].[strReportCode],'' '') not like ''LCS%'') AND [ReassignCount]= 0 AND eh.[Mgr_ID] = '''+@nvcMGRID+'''
AND([S].[Status] = '''+@strFormStatus1+''' OR [S].[Status] = '''+@strFormStatus4+''' OR [S].[Status] = '''+@strFormStatus5+''')) 
OR((ISNULL([cl].[strReportCode],'' '') not like ''LCS%'') AND [ReassignCount]= 0 AND eh.[Sup_ID] ='''+@nvcMGRID+'''
AND ([S].[Status] = '''+@strFormStatus1+''' OR [S].[Status] = '''+@strFormStatus2+''' OR [S].[Status] = '''+@strFormStatus3+''' OR [S].[Status] = '''+@strFormStatus6+'''))
OR((ISNULL([cl].[strReportCode],'' '') not like ''LCS%'') AND cl.[ReassignedToID] = '''+@nvcMGRID+''' AND [ReassignCount]<> 0
AND ([S].[Status] = '''+@strFormStatus1+''' OR [S].[Status] = '''+@strFormStatus4+''' OR [S].[Status] = '''+@strFormStatus5+''')) 
OR ([cl].[strReportCode] like ''LCS%'' AND [ReassignCount]= 0 AND cl.[MgrID] = '''+@nvcMGRID+''' AND [S].[Status] = '''+@strFormStatus1+''')
OR ([cl].[strReportCode] like ''LCS%'' AND cl.[ReassignedToID] = '''+@nvcMGRID+''' AND [ReassignCount]<> 0 AND [S].[Status] = '''+@strFormStatus1+''')
OR ([cl].[strReportCode] like ''LCS%'' AND [ReassignCount]= 0 AND eh.[Sup_ID] ='''+@nvcMGRID+''' AND [S].[Status] = '''+@strFormStatus2+'''))
AND '''+@nvcMGRID+''' <> ''999999''
GROUP BY [cl].[CoachingID],[cl].[FormName],[eh].[Emp_LanID],[eh].[Emp_Name],[eh].[Sup_Name],[s].[Status],[cl].[SubmittedDate]
Order By [SubmittedDate] DESC'
		


	



EXEC (@nvcSQL)
--PRINT 	@nvcSQL

--EXECUTE sp_executesql @nvcSQL;


	    
If @@ERROR <> 0 GoTo ErrorHandler
    Set NoCount OFF
    Return(0)
  
ErrorHandler:
    Return(@@ERROR)
	    
END --sp_SelectFrom_Coaching_Log_MGRPending

GO



--**************************************************

--7. sp_SelectFrom_Coaching_Log_MGRCSRPending


IF EXISTS (
  SELECT * 
    FROM INFORMATION_SCHEMA.ROUTINES 
   WHERE SPECIFIC_SCHEMA = N'EC'
     AND SPECIFIC_NAME = N'sp_SelectFrom_Coaching_Log_MGRCSRPending' 
)
   DROP PROCEDURE [EC].[sp_SelectFrom_Coaching_Log_MGRCSRPending]
GO


SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO

--	====================================================================
--	Author:			Susmitha Palacherla
--	Create Date:	11/16/2011
--	Description: This procedure selects the Pendingd e-Coaching records 
--  for a given Manager's employees in the Manager Dashboard.
--  Last Updated By: Susmitha Palacherla
--  Revision History:
--  Modified per scr 14422 - dashboard redesign - 04/16/2015
--  1. To Replace old style joins.
--  2. Lan ID association by date.
--  Modified per TFS 1709 - Admin tool setup to add non hierarchy sups - 5/4/2016
-- Modified per TFS 3598 to add Coaching Reason fields and use sp_executesql - 8/15/2016
-- Modified per TFS 3923 to fix slow running stored procedures in my dashboard - 9/22/2016
--	=====================================================================
CREATE PROCEDURE [EC].[sp_SelectFrom_Coaching_Log_MGRCSRPending] 

@strCSRMGRin nvarchar(30),
@strCSRSUPin nvarchar(30),
@strSourcein nvarchar(100),
@strCSRin nvarchar(30) 

AS

BEGIN

Set NoCount ON

DECLARE	
@nvcSQL nvarchar(max),
@ParmDefinition NVARCHAR(1000),
@nvcMGRID Nvarchar(10),
@dtmDate datetime


SET @dtmDate  = GETDATE()   
SET @nvcMGRID = EC.fn_nvcGetEmpIdFromLanID(@strCSRMGRin,@dtmDate)

SET @nvcSQL = N'SELECT [cl].[FormName]	strFormID,
		[eh].[Emp_Name]	strCSRName,
	    CASE 
	     WHEN (cl.[statusId]in (6,8) AND cl.[ModuleID] in (1,3,4,5) AND cl.[ReassignedToID]is NOT NULL and [ReassignCount]<> 0)
		 THEN [EC].[fn_strEmpNameFromEmpID](cl.[ReassignedToID])
		 WHEN (cl.[statusId]= 5 AND cl.[ModuleID] = 2 AND cl.[ReassignedToID]is NOT NULL and [ReassignCount]<> 0)
		 THEN [EC].[fn_strEmpNameFromEmpID](cl.[ReassignedToID])
		 ELSE [eh].[Sup_Name]
	END  strCSRSupName,	
		[eh].[Mgr_Name]	strCSRMgrName, 
		[s].[Status]	strFormStatus,
		[sc].[SubCoachingSource] strSource,
		[cl].[SubmittedDate]	SubmittedDate,
	    [EC].[fn_strCoachingReasonFromCoachingID]([cl].[CoachingID]) strCoachingReason,
	    [EC].[fn_strSubCoachingReasonFromCoachingID]([cl].[CoachingID])strSubCoachingReason,
	    [EC].[fn_strValueFromCoachingID]([cl].[CoachingID])strValue
FROM [EC].[Employee_Hierarchy] eh JOIN [EC].[Coaching_Log] cl WITH(NOLOCK) ON
[cl].[EmpID] = [eh].[Emp_ID] Join [EC].[DIM_Status] s ON
[cl].[StatusID] = [s].[StatusID] JOIN  [EC].[DIM_Source] sc ON
[cl].[SourceID] = [sc].[SourceID] 
where (eh.[Mgr_ID] = @nvcMGRIDparam OR 
(cl.[ReassignedToID] IN 
(SELECT DISTINCT Emp_ID FROM EC.Employee_Hierarchy 
WHERE Sup_ID = @nvcMGRIDparam)))
and [eh].[Emp_Name] Like @strCSRinparam
and [eh].[Sup_Name] Like @strCSRSUPinparam
and [S].[Status] like ''Pending%''
and [sc].[SubCoachingSource] Like @strSourceinparam
and @nvcMGRIDparam <> ''999999''
Order By [SubmittedDate] DESC'

	
SET @ParmDefinition = N'@nvcMGRIDparam nvarchar(10),@strCSRSUPinparam nvarchar(30),
@strSourceinparam nvarchar(100),@strCSRinparam nvarchar(30)'
--EXEC (@nvcSQL)
--PRINT 	@nvcSQL

EXECUTE sp_executesql @nvcSQL, @ParmDefinition,
@nvcMGRIDparam = @nvcMGRID,@strCSRSUPinparam = @strCSRSUPin,
@strSourceinparam = @strSourcein,@strCSRinparam = @strCSRin;

	    
If @@ERROR <> 0 GoTo ErrorHandler
    Set NoCount OFF
    Return(0)
  
ErrorHandler:
    Return(@@ERROR)
	    
END --sp_SelectFrom_Coaching_Log_MGRCSRPending


GO


--**************************************************

--8. sp_SelectFrom_Coaching_Log_MGRCSRCompleted


IF EXISTS (
  SELECT * 
    FROM INFORMATION_SCHEMA.ROUTINES 
   WHERE SPECIFIC_SCHEMA = N'EC'
     AND SPECIFIC_NAME = N'sp_SelectFrom_Coaching_Log_MGRCSRCompleted' 
)
   DROP PROCEDURE [EC].[sp_SelectFrom_Coaching_Log_MGRCSRCompleted]
GO



SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO








--	====================================================================
--	Author:			Susmitha Palacherla
--	Create Date:	11/16/2011
--	Description: This procedure selects the completed e-Coaching records 
--  for a given Manager's employees in the Manager Dashboard.
-- Last Updated By: Susmitha Palacherla
-- Last Modified Date: 04/16/2015
-- Modified during dashboard redesign SCR 14422.
-- 1. To Replace old style joins.
-- 2. Lan ID association by date.
-- Modified per TFS 3598 to add Coaching Reason fields and use sp_executesql - 8/15/2016
-- Modified per TFS 3923 to fix slow running stored procedures in my dashboard - 9/22/2016
--	=====================================================================
CREATE PROCEDURE [EC].[sp_SelectFrom_Coaching_Log_MGRCSRCompleted] 

@strSourcein nvarchar(100),
@strCSRMGRin nvarchar(30),
@strCSRSUPin nvarchar(30),
@strCSRin nvarchar(30),
@strSDatein datetime,
@strEDatein datetime
 
AS

BEGIN

Set NoCount ON

DECLARE	
@nvcSQL nvarchar(max),
@ParmDefinition NVARCHAR(1000),
@strFormStatus nvarchar(30),
@strSDate nvarchar(8),
@strEDate nvarchar(8),
@nvcMGRID Nvarchar(10),
@dtmDate datetime

SET @strFormStatus = 'Completed'
SET @strSDate = convert(varchar(8),@strSDatein,112)
SET @strEDate = convert(varchar(8),@strEDatein,112)
SET @dtmDate  = GETDATE()   
SET @nvcMGRID = EC.fn_nvcGetEmpIdFromLanID(@strCSRMGRin,@dtmDate)

 

SET @nvcSQL = 'WITH TempMain AS 
(SELECT DISTINCT x.strFormID
				,x.strCoachingID
				,x.strCSRName
				,x.strCSRSupName
				,x.strCSRMgrName
				,x.strFormStatus
				,x.strSource
				,x.SubmittedDate				  
FROM (SELECT [cl].[FormName]	strFormID,
        [cl].[CoachingID]	strCoachingID,
		[eh].[Emp_Name]	strCSRName,
		[eh].[Sup_Name]	strCSRSupName, 
		[eh].[Mgr_Name]	strCSRMgrName, 
		[s].[Status]	strFormStatus,
		[sc].[SubCoachingSource]	strSource,
		[cl].[SubmittedDate]	SubmittedDate
		FROM [EC].[Employee_Hierarchy] eh JOIN [EC].[Coaching_Log] cl WITH(NOLOCK) ON
[cl].[EmpID] = [eh].[Emp_ID]Join [EC].[DIM_Status] s ON
[cl].[StatusID] = [s].[StatusID] JOIN  [EC].[DIM_Source] sc ON
[cl].[SourceID] = [sc].[SourceID] 
where eh.[Mgr_ID] = @nvcMGRIDparam
and [S].[Status] = '''+@strFormStatus+'''
and [sc].[SubCoachingSource] Like @strSourceinparam
and [eh].[Emp_Name] Like @strCSRinparam
and [eh].[Sup_Name] Like  @strCSRSUPinparam
and convert(varchar(8),[cl].[SubmittedDate],112) >= @strSDateinparam
and convert(varchar(8),[cl].[SubmittedDate],112) <= @strEDateinparam
and eh.[Mgr_ID] <> ''999999''
GROUP BY [cl].[FormName],[cl].[CoachingID],[eh].[Emp_Name],[eh].[Sup_Name],
[eh].[Mgr_Name],[S].[Status],[sc].[SubCoachingSource],[cl].[SubmittedDate])X )

SELECT strFormID
		,strCSRName
		,strCSRSupName
		,strCSRMgrName
	   	,strFormStatus
	   	,strSource
	  	,SubmittedDate
	    ,[EC].[fn_strCoachingReasonFromCoachingID](T.strCoachingID) strCoachingReason
	    ,[EC].[fn_strSubCoachingReasonFromCoachingID](T.strCoachingID)strSubCoachingReason
	    ,[EC].[fn_strValueFromCoachingID](T.strCoachingID)strValue	
	     FROM TempMain T              
		 ORDER BY SubmittedDate DESC' 

	
	
SET @ParmDefinition = N'@strSourceinparam nvarchar(100),@nvcMGRIDparam nvarchar(10),@strCSRSUPinparam nvarchar(30),
@strCSRinparam nvarchar(30), @strSDateinparam datetime, @strEDateinparam datetime'	
--EXEC (@nvcSQL)
--PRINT 	@nvcSQL

EXECUTE sp_executesql @nvcSQL, @ParmDefinition,
@strSourceinparam = @strSourcein,@nvcMGRIDparam = @nvcMGRID,@strCSRSUPinparam = @strCSRSUPin,
@strCSRinparam = @strCSRin, @strSDateinparam = @strSDatein, @strEDateinparam = @strEDatein;

	    
If @@ERROR <> 0 GoTo ErrorHandler
    Set NoCount OFF
    Return(0)
  
ErrorHandler:
    Return(@@ERROR)
	    
END --sp_SelectFrom_Coaching_Log_MGRCSRCompleted

GO


--**************************************************





--9. sp_SelectFrom_Warning_Log_SUPCSRCompleted


IF EXISTS (
  SELECT * 
    FROM INFORMATION_SCHEMA.ROUTINES 
   WHERE SPECIFIC_SCHEMA = N'EC'
     AND SPECIFIC_NAME = N'sp_SelectFrom_Warning_Log_SUPCSRCompleted' 
)
   DROP PROCEDURE [EC].[sp_SelectFrom_Warning_Log_SUPCSRCompleted]
GO




SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO


--	====================================================================
--	Author:			Susmitha Palacherla
--	Create Date:	10/09/2014
--	Description: *	This procedure selects the CSR Warning records from the Warning_Log table
-- Last Updated By: Susmitha Palacherla
-- Modified SCR 13542 to add functionality for acting managers  - 12/02/2014
-- Modified per TFS 3598 to add Warning Reason fields and use sp_executesql - 8/15/2016 
-- Modified per TFS 3923 to fix slow running stored procedures in my dashboard - 9/22/2016
--	=====================================================================
CREATE PROCEDURE [EC].[sp_SelectFrom_Warning_Log_SUPCSRCompleted] 
@strCSRSUPin nvarchar(30),
@strSDatein datetime,
@strEDatein datetime,
@bitActive nvarchar(1)

AS

BEGIN
SET NOCOUNT ON

DECLARE	
@nvcSQL nvarchar(max),
@ParmDefinition NVARCHAR(1000),
@strFormStatus nvarchar(30),
@strSDate nvarchar(8),
@strEDate nvarchar(8),
@nvcSupID Nvarchar(10),
@dtmDate datetime

Set @strFormStatus = 'Completed'
Set @strSDate = convert(varchar(8),@strSDatein,112)
Set @strEDate = convert(varchar(8),@strEDatein,112)
Set @dtmDate  = GETDATE()   
Set @nvcSupID = EC.fn_nvcGetEmpIdFromLanID(@strCSRSUPin,@dtmDate)

SET @nvcSQL = 'WITH TempMain AS 
(SELECT DISTINCT x.strFormID
				,x.strWarningID
				,x.strCSRName
				,x.strCSRSupName
				,x.strCSRMgrName
				,x.strFormStatus
				,x.strSource
			    ,x.SubmittedDate				  
FROM (SELECT	[wl].[FormName]	strFormID,
        [wl].[WarningID]	strWarningID,
		[eh].[Emp_Name]	strCSRName,
		[eh].[Sup_Name]	strCSRSupName, 
		[eh].[Mgr_Name]	strCSRMgrName, 
		[s].[Status]	strFormStatus,
		[sc].[SubCoachingSource]	strSource,
		[wl].[SubmittedDate]	SubmittedDate
	    FROM [EC].[Employee_Hierarchy] eh join  [EC].[Warning_Log] wl 
ON [wl].[EmpID] = [eh].[Emp_ID] JOIN  [EC].[DIM_Status]s
ON [wl].[StatusID] = [s].[StatusID] JOIN [EC].[DIM_Source]sc
ON [wl].[SourceID] = [sc].[SourceID]
WHERE ([eh].[Sup_ID] =  @nvcSupIDparam OR [eh].[Mgr_ID] = @nvcSupIDparam)
and [s].[Status] = '''+@strFormStatus+'''
and convert(varchar(8),[wl].[SubmittedDate],112) >= @strSDateinparam
and convert(varchar(8),[wl].[SubmittedDate],112) <= @strEDateinparam
and [wl].[Active] like '''+ CONVERT(NVARCHAR,@bitActive) + '''
and (eh.Sup_ID <> ''999999''OR eh.Mgr_ID <> ''999999'')
GROUP BY [wl].[FormName],[wl].[WarningID],[eh].[Emp_Name],[eh].[Sup_Name] ,
[eh].[Mgr_Name],[S].[Status],[sc].[SubCoachingSource],[wl].[SubmittedDate])X )

SELECT strFormID
		,strCSRName
		,strCSRSupName
		,strCSRMgrName
	   	,strFormStatus
	   	,SubmittedDate
        ,[EC].[fn_strCoachingReasonFromWarningID](strWarningID) strCoachingReason
	    ,[EC].[fn_strSubCoachingReasonFromWarningID](strWarningID)strSubCoachingReason
	     FROM TempMain T              
		 ORDER BY SubmittedDate DESC' 


	
SET @ParmDefinition = N'@nvcSupIDparam nvarchar(10),@strSDateinparam datetime, @strEDateinparam datetime'	
--EXEC (@nvcSQL)	
--PRINT @nvcSQL

EXECUTE sp_executesql @nvcSQL, @ParmDefinition,
@nvcSupIDparam = @nvcSupID,@strSDateinparam = @strSDatein, @strEDateinparam = @strEDatein;
	    
	    
If @@ERROR <> 0 GoTo ErrorHandler
    Set NoCount OFF
    Return(0)
  
ErrorHandler:
    Return(@@ERROR)
	    
END --sp_SelectFrom_Warning_Log_SUPCSRCompleted




GO





--**************************************************
--10. sp_SelectFrom_Warning_Log_MGRCSRCompleted

IF EXISTS (
  SELECT * 
    FROM INFORMATION_SCHEMA.ROUTINES 
   WHERE SPECIFIC_SCHEMA = N'EC'
     AND SPECIFIC_NAME = N'sp_SelectFrom_Warning_Log_MGRCSRCompleted' 
)
   DROP PROCEDURE [EC].[sp_SelectFrom_Warning_Log_MGRCSRCompleted]
GO



SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO


--	====================================================================
--	Author:			Susmitha Palacherla
--	Create Date:	10/09/2014
--	Description: *	This procedure selects the CSR Warning records from the Warning_Log table
--  Modified per TFS 3598 to add Warning Reason fields and use sp_executesql - 8/15/2016 
--  Modified per TFS 3923 to fix slow running stored procedures in my dashboard - 9/22/2016
--	=====================================================================
CREATE PROCEDURE [EC].[sp_SelectFrom_Warning_Log_MGRCSRCompleted] 
@strCSRMGRin nvarchar(30),
@strSDatein datetime,
@strEDatein datetime,
@bitActive nvarchar(1)
 
AS

BEGIN
SET NOCOUNT ON

DECLARE	
@nvcSQL nvarchar(max),
@ParmDefinition NVARCHAR(1000),
@strFormStatus nvarchar(30),
@strSDate nvarchar(8),
@strEDate nvarchar(8),
@nvcMgrID Nvarchar(10),
@dtmDate datetime

Set @strFormStatus = 'Completed'
Set @strSDate = convert(varchar(8),@strSDatein,112)
Set @strEDate = convert(varchar(8),@strEDatein,112)
Set @dtmDate  = GETDATE()   
Set @nvcMgrID = EC.fn_nvcGetEmpIdFromLanID(@strCSRMGRin,@dtmDate)
 

SET @nvcSQL = 'WITH TempMain AS 
(SELECT DISTINCT x.strFormID
				,x.strWarningID
				,x.strCSRName
				,x.strCSRSupName
				,x.strCSRMgrName
				,x.strFormStatus
				,x.strSource
			    ,x.SubmittedDate				  
FROM (SELECT	[wl].[FormName]	strFormID,
        [wl].[WarningID]	strWarningID,
		[eh].[Emp_Name]	strCSRName,
		[eh].[Sup_Name]	strCSRSupName, 
		[eh].[Mgr_Name]	strCSRMgrName, 
		[s].[Status]	strFormStatus,
		[sc].[SubCoachingSource]	strSource,
		[wl].[SubmittedDate]	SubmittedDate
FROM [EC].[Employee_Hierarchy] eh join  [EC].[Warning_Log] wl 
ON [wl].[EmpID] = [eh].[Emp_ID] JOIN  [EC].[DIM_Status]s
ON [wl].[StatusID] = [s].[StatusID] JOIN [EC].[DIM_Source]sc
ON [wl].[SourceID] = [sc].[SourceID]
WHERE ([eh].[Mgr_ID] = @nvcMgrIDparam OR [eh].[Sup_ID] = @nvcMgrIDparam)
and [s].[Status] = '''+@strFormStatus+'''
and convert(varchar(8),[wl].[SubmittedDate],112) >= @strSDateinparam
and convert(varchar(8),[wl].[SubmittedDate],112) <= @strEDateinparam
and [wl].[Active] like '''+ CONVERT(NVARCHAR,@bitActive) + '''
and (eh.Mgr_ID <> ''999999''OR eh.Sup_ID <> ''999999'')
GROUP BY [wl].[FormName],[wl].[WarningID],[eh].[Emp_Name],[eh].[Sup_Name] ,
[eh].[Mgr_Name],[S].[Status],[sc].[SubCoachingSource],[wl].[SubmittedDate])X )

SELECT strFormID
		,strCSRName
		,strCSRSupName
		,strCSRMgrName
	   	,strFormStatus
	   	,SubmittedDate
        ,[EC].[fn_strCoachingReasonFromWarningID](strWarningID) strCoachingReason
	    ,[EC].[fn_strSubCoachingReasonFromWarningID](strWarningID)strSubCoachingReason
	     FROM TempMain T              
		 ORDER BY SubmittedDate DESC' 

	
SET @ParmDefinition = N'@nvcMgrIDparam nvarchar(30),@strSDateinparam datetime, @strEDateinparam datetime'	
--EXEC (@nvcSQL)	
--PRINT @nvcSQL

EXECUTE sp_executesql @nvcSQL, @ParmDefinition,
@nvcMgrIDparam = @nvcMgrID,@strSDateinparam = @strSDatein, @strEDateinparam = @strEDatein;
	    
	    
If @@ERROR <> 0 GoTo ErrorHandler
    Set NoCount OFF
    Return(0)
  
ErrorHandler:
    Return(@@ERROR)
	    
END --sp_SelectFrom_Warning_Log_MGRCSRCompleted

GO


--*****************************************************


