/*

Implementation Instructions for SCR 14072.


There are 2 sections for the Implementation
Section 1 to stage the ssis package 
Section 2 to implement the code changes in the DB.


Section 1 Summary

1. Stage modified ssis package

Section 2 summary
1. Add columns to table [EC].[EmpID_To_SupID_Stage]
2.Update procedure [EC].[sp_InactivateCoachingLogsForTerms] 

**********************************************************************************************

				--Details: Section 1

************************************************************************************************/

1. Get the following files from VM and stage overwriting existing files.

    Employee_Hierarchy.dtsx (VM version 1.4) -  Stage file to \\vdenssdbp07\scorecard-ssis\Coaching\
    Prod_Employee_Hierarchy.dtsConfig (VM version 1.1) -  Stage file to \\vdenssdbp07\scorecard-ssis\Coaching\

--*********************************************************************************************




/****************************************************************************************

				--Details: Section 2


/****************************************************************************************

Copy into an SSMS window pointed to the eCoaching database in the target environment
(vdenssdbp07\scorp01) and run one statement at a time.

********************************************************************************************/

--step1: Add column to table [EC].[EmpID_To_SupID_Stage]

ALTER table [EC].[EmpID_To_SupID_Stage]
ADD [Emp_Status] [nvarchar](10) NULL,
         [Emp_LanID] [nvarchar](30) NULL
GO


--***********************************************************************************

-- 2. ALTER PROCEDURE [EC].[sp_InactivateCoachingLogsForTerms] 

IF EXISTS (
  SELECT * 
    FROM INFORMATION_SCHEMA.ROUTINES 
   WHERE SPECIFIC_SCHEMA = N'EC'
     AND SPECIFIC_NAME = N'sp_InactivateCoachingLogsForTerms' 
)
   DROP PROCEDURE [EC].[sp_InactivateCoachingLogsForTerms]
GO

SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO



-- =============================================
-- Author:		   Susmitha Palacherla
-- Create Date:    04/09/2014
-- Description:	Inactivate Coaching logs for Termed Employees
-- Last Modified Date: 01/16/2015
-- Last Updated By: Susmitha Palacherla
-- Modified to Inactivate Coaching logs for extended absences status 
-- and for CSR and Sup Module ecls for employees not arriving in ewfm feed per scr 14072.


-- =============================================
CREATE PROCEDURE [EC].[sp_InactivateCoachingLogsForTerms] 
AS
BEGIN

 DECLARE @EWFMSiteCount INT
 
 -- Inactivate Warnings logs for Termed Employees

BEGIN
UPDATE [EC].[Warning_Log]
SET [StatusID] = 2
FROM [EC].[Warning_Log] W JOIN [EC].[Employee_Hierarchy]H
ON W.[EmpLanID] = H.[Emp_LanID]
AND W.[EmpID] = H.[Emp_ID]
WHERE CAST(H.[End_Date] AS DATETIME)< GetDate()
AND H.[Active] in ('T','D')
AND H.[End_Date]<> '99991231'
AND W.[StatusID] <> 2
OPTION (MAXDOP 1)
END

WAITFOR DELAY '00:00:00.05' -- Wait for 5 ms


-- Inactivate Coaching logs for Termed Employees

BEGIN
UPDATE [EC].[Coaching_Log]
SET [StatusID] = 2
FROM [EC].[Coaching_Log] C JOIN [EC].[Employee_Hierarchy]H
ON C.[EmpLanID] = H.[Emp_LanID]
AND C.[EmpID] = H.[Emp_ID]
WHERE CAST(H.[End_Date] AS DATETIME)< GetDate()
AND H.[Active] in ('T','D')
AND H.[End_Date]<> '99991231'
AND C.[StatusID] not in (1,2)
OPTION (MAXDOP 1)
END


WAITFOR DELAY '00:00:00.05' -- Wait for 5 ms


-- Inactivate Coaching logs for Employees on Extended Absence

BEGIN
UPDATE [EC].[Coaching_Log]
SET [StatusID] = 2
FROM [EC].[Coaching_Log] C JOIN [EC].[EmpID_To_SupID_Stage]H
ON C.[EmpLanID] = H.[Emp_LanID]
AND C.[EmpID] = LTRIM(H.[Emp_ID])
WHERE H.[Emp_Status]= 'EA'
AND H.[Emp_LanID] IS NOT NULL
AND C.[StatusID] not in (1,2)
OPTION (MAXDOP 1)
END


WAITFOR DELAY '00:00:00.05' -- Wait for 5 ms

-- Inactivate Coaching logs for CSRs and Sup Module eCLs for Employees not arriving in eWFM feed.

SET @EWFMSiteCount = (SELECT count(DISTINCT Emp_Site_Code) FROM [EC].[EmpID_To_SupID_Stage])
IF @EWFMSiteCount >= 14
BEGIN
UPDATE [EC].[Coaching_Log]
SET [StatusID] = 2
FROM [EC].[Coaching_Log] C LEFT OUTER JOIN [EC].[EmpID_To_SupID_Stage] S
ON C.EMPID = LTRIM(S.EMP_ID)
WHERE C.[StatusID] not in (1,2)
AND C.[ModuleID]  in (1,2)
AND S.EMP_ID IS NULL
OPTION (MAXDOP 1)
END


END  -- [EC].[sp_InactivateCoachingLogsForTerms]

GO




--*************************************************************************************************