/* SCR 14423 implementation Steps.
Open in an ssms window pointing to eCoaching DB in target environment and run with nothing selected.
Dev - eCoachingDev
Test- eCoachingTest
Prod - eCoaching
*/
-- Indexes

-- RUN ONE AT A TIME

--********************************

IF EXISTS (SELECT name FROM sys.indexes
            WHERE name = N'IDX_Coaching_Log_FormName_SubmittedDate') 
    DROP INDEX IDX_Coaching_Log_FormName_SubmittedDate ON [EC].[Coaching_Log]; 
GO
CREATE NONCLUSTERED INDEX [IDX_Coaching_Log_FormName_submittedDate] ON [EC].[Coaching_Log]
     (
     [FormName]ASC, [SubmittedDate] ASC
     )
      WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
GO


--*************************************************************************




IF EXISTS (SELECT name FROM sys.indexes
            WHERE name = N'IDX_Coaching_SubmitterID') 
    DROP INDEX [IDX_Coaching_Log_SubmitterID]
ON [EC].[Coaching_Log]; 
GO

CREATE NONCLUSTERED INDEX [IDX_Coaching_Log_SubmitterID] ON [EC].[Coaching_Log]
     (
	[SubmitterID] ASC
     )
   INCLUDE ([FormName], [StatusID], [EmpID], [SubmittedDate])
      WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
GO




--*************************************************************************



IF EXISTS (SELECT name FROM sys.indexes
            WHERE name = N'IDX_Coaching_Log_K6_K1_K4_K5_K9_K8_K24') 
    DROP INDEX IDX_Coaching_Log_K6_K1_K4_K5_K9_K8_K24 
ON [EC].[Coaching_Log]; 
GO

CREATE NONCLUSTERED INDEX [IDX_Coaching_Log_K6_K1_K4_K5_K9_K8_K24] ON [EC].[Coaching_Log] 
(
	[SiteID] ASC,
	[CoachingID] ASC,
	[SourceID] ASC,
	[StatusID] ASC,
	[SubmitterID] ASC,
	[EmpID] ASC,
	[SubmittedDate] ASC
	)
INCLUDE ([FormName])
WITH (SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, DROP_EXISTING = OFF, ONLINE = OFF) ON [PRIMARY]



--*************************************************************************


IF EXISTS (SELECT name FROM sys.indexes
            WHERE name = N'IDX_Employee_Hierarchy_Emp_LANID') 
    DROP INDEX IDX_Employee_Hierarchy_Emp_LANID ON [EC].[Employee_Hierarchy]; 
GO
CREATE NONCLUSTERED INDEX [IDX_Employee_Hierarchy_Emp_LANID] ON [EC].[Employee_Hierarchy]
     (
     [Emp_LANID]ASC
     )
          WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
GO

--*************************************************************************





IF EXISTS (SELECT name FROM sys.indexes
            WHERE name = N'IDX_Employee_Hierarchy_Emp_Sup_Mgr_Names') 
    DROP INDEX IDX_Employee_Hierarchy_Emp_Sup_Mgr_Names ON [EC].[Employee_Hierarchy]; 
GO
CREATE NONCLUSTERED INDEX [IDX_Employee_Hierarchy_Emp_Sup_Mgr_Names] ON [EC].[Employee_Hierarchy]
     (
	[Emp_Name] ASC,
	[Sup_Name] ASC,
	[Mgr_Name] ASC   
      )
     INCLUDE ([Emp_ID])
          WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
GO


--*************************************************************************




IF EXISTS (SELECT name FROM sys.indexes
            WHERE name = N'IDX_Employee_Hierarchy_Sup_ID') 
    DROP INDEX IDX_Employee_Hierarchy_Sup_ID ON [EC].[Employee_Hierarchy]; 
GO
CREATE NONCLUSTERED INDEX [IDX_Employee_Hierarchy_Sup_ID] ON [EC].[Employee_Hierarchy]
     (
     [Sup_ID]ASC
     )
          WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
GO



--*************************************************************************





IF EXISTS (SELECT name FROM sys.indexes
            WHERE name = N'IDX_Employee_Hierarchy_Mgr_ID') 
    DROP INDEX IDX_Employee_Hierarchy_Mgr_ID ON [EC].[Employee_Hierarchy]; 
GO
CREATE NONCLUSTERED INDEX [IDX_Employee_Hierarchy_Mgr_ID] ON [EC].[Employee_Hierarchy]
     (
     [Mgr_ID]ASC
     )
          WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
GO


--*************************************************************************



IF EXISTS (SELECT name FROM sys.indexes
            WHERE name = N'IDX_Coaching_Log_Reason_Value') 
    DROP INDEX IDX_Coaching_Log_Reason_Value ON [EC].[Coaching_Log_Reason]; 
GO
-- Create a nonclustered index called IDX_Employee_Hierarchy_Emp_Name
-- on the [EC].[Employee_Hierarchy] table using the [Emp_Name]column. 
CREATE NONCLUSTERED INDEX [IDX_Coaching_Log_Reason_Value] ON [EC].[Coaching_Log_Reason]
     (
     [Value]ASC
     )
     WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
GO



--*************************************************************************


UPDATE STATISTICS [EC].[Coaching_Log]

--*************************************************************************


UPDATE STATISTICS [EC].[Employee_Hierarchy]

--*************************************************************************


UPDATE STATISTICS [EC].[Coaching_Log_Reason]


--*************************************************************************


UPDATE STATISTICS [EC].[EmployeeID_To_LanID]


--*************************************************************************


