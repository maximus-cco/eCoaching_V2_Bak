/*
Implementation Instructions for SCR 13826

Summary
1.Insert records into [EC].[DIM_Source] table (dim data doc)
2. Insert records into [EC].[Email_Notifications] table (dim data doc)
3. Create Function [EC].[fn_intSourceIDFromSource] (fns doc)
4. Update procedure [EC].[sp_InsertInto_Coaching_Log_Quality] (quality doc)
5. Update procedure [EC].[sp_SelectCoaching4Contact] (maint doc)

***************************************************

For Implementing
Run the below statements one at a time.
In an ssis window pointed to ECoaching database on vdenssdbp07\scorp01


**************************************************/



--1.Insert records into [EC].[DIM_Source] table

INSERT INTO [EC].[DIM_Source]
           ([SourceID]
           ,[CoachingSource]
           ,[SubCoachingSource]
           ,[isActive]
           ,[CSR]
           ,[Supervisor]
           ,[Quality])
     VALUES
           (122,'Direct','LimeSurvey',1,0,0,0),
           (123,'Direct','Verint-GDIT',1,0,0,0),
           (124,'Direct','Verint-TQC',1,0,0,0),
           (222,'Indirect','LimeSurvey ',1,0,0,0),
           (223,'Indirect','Verint-GDIT',1,0,0,0),
           (224,'Indirect','Verint-TQC',1,0,0,0)
           
GO

--*******************************************************

--2. Insert records into [EC].[Email_Notifications] table

INSERT INTO [EC].[Email_Notifications]
           ([Module]
           ,[Submission]
           ,[Source]
           ,[SubSource]
           ,[isCSE]
           ,[Status]
           ,[Recipient]
           ,[Subject]
           ,[Body]
           ,[isCCRecipient]
           ,[CCRecipient])
     VALUES
    	 ('CSR','IQS','Indirect','LimeSurvey',0,'Pending Acknowledgement','Employee','eCL: Pending Acknowledgement','A new eCoaching Log has been entered on your behalf. Please click on the link below to review and verify the coaching opportunity received on <strong> strDateTime </strong>.',0,'NA'),
	 ('CSR','IQS','Indirect','LimeSurvey',0,'Pending Supervisor Review','Supervisor','eCL: Pending Supervisor Review','A new eCoaching Log has been entered on behalf of <strong> strPerson </strong>  on <strong> strDateTime </strong> that requires your action. Please click on the link below to review the eCoaching log.',0,'NA'),
	 ('CSR','IQS','Indirect','LimeSurvey',1,'Pending Manager Review','Mananger','eCL: Pending Manager Review','A new eCoaching Log has been entered and requires your action. Please click on the link below to review and verify that the eCL entered on <strong> strDateTime </strong> for <strong> strPerson </strong> is a valid Customer Service Escalation (CSE). Further directions are provided on the form.',0,'NA'),
 ('CSR','IQS','Indirect','Verint-GDIT',0,'Pending Acknowledgement','Employee','eCL: Pending Acknowledgement','A new eCoaching Log has been entered on your behalf. Please click on the link below to review and verify the coaching opportunity received on <strong> strDateTime </strong>.',0,'NA'),
	 ('CSR','IQS','Indirect','Verint-GDIT',0,'Pending Supervisor Review','Supervisor','eCL: Pending Supervisor Review','A new eCoaching Log has been entered on behalf of <strong> strPerson </strong>  on <strong> strDateTime </strong> that requires your action. Please click on the link below to review the eCoaching log.',0,'NA'),
	 ('CSR','IQS','Indirect','Verint-GDIT',1,'Pending Manager Review','Mananger','eCL: Pending Manager Review','A new eCoaching Log has been entered and requires your action. Please click on the link below to review and verify that the eCL entered on <strong> strDateTime </strong> for <strong> strPerson </strong> is a valid Customer Service Escalation (CSE). Further directions are provided on the form.',0,'NA'),
 ('CSR','IQS','Indirect','Verint-TQC',0,'Pending Acknowledgement','Employee','eCL: Pending Acknowledgement','A new eCoaching Log has been entered on your behalf. Please click on the link below to review and verify the coaching opportunity received on <strong> strDateTime </strong>.',0,'NA'),
	 ('CSR','IQS','Indirect','Verint-TQC',0,'Pending Supervisor Review','Supervisor','eCL: Pending Supervisor Review','A new eCoaching Log has been entered on behalf of <strong> strPerson </strong>  on <strong> strDateTime </strong> that requires your action. Please click on the link below to review the eCoaching log.',0,'NA'),
	 ('CSR','IQS','Indirect','Verint-TQC',1,'Pending Manager Review','Mananger','eCL: Pending Manager Review','A new eCoaching Log has been entered and requires your action. Please click on the link below to review and verify that the eCL entered on <strong> strDateTime </strong> for <strong> strPerson </strong> is a valid Customer Service Escalation (CSE). Further directions are provided on the form.',0,'NA')
GO


--****************************************************************************


--3. Create Function [EC].[fn_intSourceIDFromSource]


SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO



-- =============================================
-- Author:              Susmitha Palacherla
-- Create date:         11/21/2014
-- Description:	  Given the Source value returns the Source ID. 
-- =============================================
CREATE FUNCTION [EC].[fn_intSourceIDFromSource] (
  @strSourceType NVARCHAR(20), @strSource NVARCHAR(60)
)
RETURNS INT
AS
BEGIN
  DECLARE @intSourceID INT
  
  SET @intSourceID = ( SELECT [SourceID]
  FROM [EC].[DIM_Source]
  WHERE [CoachingSource]=@strSourceType
  AND [SubCoachingSource]= @strSource)
  
 IF  @intSourceID  IS NULL SET @intSourceID = -1
 
RETURN @intSourceID

END  -- fn_intSourceIDFromSource()

GO


--**************************************************************************


-- 4. Update procedure [EC].[sp_InsertInto_Coaching_Log_Quality]


SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO




--    ====================================================================
--    Author:           Susmitha Palacherla
--    Create Date:      02/23/2014
--    Description:     This procedure inserts the Quality scorecards into the Coaching_Log table. 
--                     The main attributes of the eCL are written to the Coaching_Log table.
--                     The Coaching Reasons are written to the Coaching_Reasons Table.
-- Last Modified Date: 11/21/2014
-- Last Updated By: Susmitha Palacherla
-- Modified to determine source value from Source value in feed instead of 
-- hardcoding to 211 (IQS)per SCR 13826.

--    =====================================================================
ALTER PROCEDURE [EC].[sp_InsertInto_Coaching_Log_Quality]
@Count INT OUTPUT
  
AS
BEGIN

SET TRANSACTION ISOLATION LEVEL REPEATABLE READ
BEGIN TRANSACTION
BEGIN TRY
      
      DECLARE @maxnumID INT,
      @strSourceType NVARCHAR(20)
       -- Fetches the maximum CoachingID before the insert.
      SET @maxnumID = (SELECT IsNUll(MAX([CoachingID]), 0) FROM [EC].[Coaching_Log])    
      SET @strSourceType = 'Indirect'
      
      -- Inserts records from the Quality_Coaching_Stage table to the Coaching_Log Table

         INSERT INTO [EC].[Coaching_Log]
           ([FormName]
           ,[ProgramName]
           ,[SourceID]
           ,[StatusID]
           ,[SiteID]
           ,[EmpLanID]
           ,[EmpID]
           ,[SubmitterID]
           ,[EventDate]
           ,[isAvokeID]
		   ,[isNGDActivityID]
           ,[isUCID]
           ,[isVerintID]
           ,[VerintID]
           ,[VerintEvalID]
           ,[Description]
	       ,[SubmittedDate]
           ,[StartDate]
           ,[isCSE]
           ,[isCSRAcknowledged]
           ,[VerintFormName]
           ,[ModuleID]
           )

            SELECT DISTINCT
            lower(csr.Emp_LanID)	[FormName],
            CASE qs.Program  
            WHEN NULL THEN csr.Emp_Program
            WHEN '' THEN csr.Emp_Program
            ELSE qs.Program  END       [ProgramName],
            [EC].[fn_intSourceIDFromSource](@strSourceType, qs.Source)[SourceID],
            [EC].[fn_strStatusIDFromIQSEvalID](qs.CSE, qs.Oppor_Rein )[StatusID],
            [EC].[fn_intSiteIDFromEmpID](LTRIM(qs.User_EMPID))[SiteID],
            lower(csr.Emp_LanID)	[EmpLanID],
            qs.User_EMPID [EmpID],
            qs.Evaluator_ID	 [SubmitterID],       
            qs.Call_Date [EventDate],
            0			[isAvokeID],
		    0			[isNGDActivityID],
            0			[isUCID],
            1 [isVerintID],
            qs.Journal_ID	[VerintID],
            qs.Eval_ID [VerintEvalID],
            EC.fn_nvcHtmlEncode(qs.Summary_CallerIssues)[Description],	
            GetDate()  [SubmittedDate], 
		    qs.Eval_Date	[StartDate],
		    CASE WHEN qs.CSE = '' THEN 0
	            	ELSE 1 END	[isCSE],			
		    0 [isCSRAcknowledged],
		    qs.VerintFormname [verintFormName],
		    1 [ModuleID]
FROM [EC].[Quality_Coaching_Stage] qs 
join EC.Employee_Hierarchy csr on qs.User_EMPID = csr.Emp_ID
left outer join EC.Coaching_Log cf on qs.Eval_ID = cf.VerintEvalID
where cf.VerintEvalID is null
OPTION (MAXDOP 1)

SELECT @Count =@@ROWCOUNT

WAITFOR DELAY '00:00:00:05'  -- Wait for 5 ms

UPDATE [EC].[Coaching_Log]
SET [FormName] = 'eCL-'+[FormName] +'-'+ convert(varchar,CoachingID)
where [FormName] not like 'eCL%'    
OPTION (MAXDOP 1)

WAITFOR DELAY '00:00:00:05'  -- Wait for 5 ms

 -- Inserts records into Coaching_Log_reason table for each record inserted into Coaching_log table.

INSERT INTO [EC].[Coaching_Log_Reason]
           ([CoachingID]
           ,[CoachingReasonID]
           ,[SubCoachingReasonID]
           ,[Value])
    SELECT cf.[CoachingID],
           10,
           42,
           qs.[Oppor_Rein]
    FROM [EC].[Quality_Coaching_Stage] qs JOIN  [EC].[Coaching_Log] cf      
    ON qs.[Eval_ID] = cf.[VerintEvalID] 
    LEFT OUTER JOIN  [EC].[Coaching_Log_Reason] cr
    ON cf.[CoachingID] = cr.[CoachingID]  
    WHERE cr.[CoachingID] IS NULL 
 OPTION (MAXDOP 1)   
 
                  
COMMIT TRANSACTION
END TRY

      
      BEGIN CATCH
      IF @@TRANCOUNT > 0
      ROLLBACK TRANSACTION


    DECLARE @ErrorMessage NVARCHAR(4000)
    DECLARE @ErrorSeverity INT
    DECLARE @ErrorState INT

    SELECT @ErrorMessage = ERROR_MESSAGE(),
           @ErrorSeverity = ERROR_SEVERITY(),
           @ErrorState = ERROR_STATE()

    RAISERROR (@ErrorMessage, -- Message text.
               @ErrorSeverity, -- Severity.
               @ErrorState -- State.
               )
      
    IF ERROR_NUMBER() IS NULL
      RETURN 1
    ELSE IF ERROR_NUMBER() <> 0 
      RETURN ERROR_NUMBER()
    ELSE
      RETURN 1
  END CATCH  
END -- sp_InsertInto_Coaching_Log_Quality
GO




--********************************************************************


-- 5. Update procedure [EC].[sp_SelectCoaching4Contact]

SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO



--	====================================================================
--	Author:		       Jourdain Augustin
--	Create Date:	   6/10/13
--	Description: 	   This procedure queries db for feed records to send out mail
-- Last Modified Date: 11/21/2014
-- Last Updated By: Susmitha Palacherla
-- Modified per SCR 13826 to include additional Verint sources.
--	=====================================================================
ALTER PROCEDURE [EC].[sp_SelectCoaching4Contact]
AS

BEGIN
DECLARE	
@nvcSQL nvarchar(max),
@strFormStatus1 nvarchar(30),
@strFormStatus2 nvarchar(30),
@intSource1 int,
@intSource2 int,
@strFormType nvarchar(30),
@strFormMail nvarchar (30)

 Set @strFormStatus1 = 'Completed'
 Set @strFormStatus2 = 'Inactive'

 
 Set @strFormType = 'Indirect'
--Set @strFormMail = 'jourdain.augustin@gdit.com'
 
SET @nvcSQL = 'SELECT   cl.CoachingID	numID	
		,cl.FormName	strFormID
		,s.Status		strFormStatus
		,eh.Emp_Email	strCSREmail
		,eh.Sup_Email	strCSRSupEmail
		,eh.Mgr_Email	strCSRMgrEmail
		,so.SubCoachingSource	strSource
		,eh.Emp_Name	strCSRName
		,so.CoachingSource	strFormType
		,cl.SubmittedDate	SubmittedDate
		,cl.CoachingDate	CoachingDate
		,cl.EmailSent	EmailSent
		,cl.sourceid
		,cl.isCSE
		,mo.Module
FROM [EC].[Employee_Hierarchy] eh,
	 [EC].[DIM_Status] s,
	 [EC].[Coaching_Log] cl,
	 [EC].[DIM_Source] so,
	 [EC].[DIM_Module] mo
WHERE cl.EMPID = eh.Emp_ID
AND cl.StatusID = s.StatusID
AND cl.SourceID = so.SourceID
AND cl.ModuleID = mo.ModuleID
AND S.Status <> '''+@strFormStatus1+'''
AND S.Status <> '''+@strFormStatus2+'''
AND cl.SourceID in (211,212,221,222,223,224)
AND cl.EmailSent = ''False''
AND ((s.status =''Pending Acknowledgement'' and eh.Emp_Email is NOT NULL and eh.Sup_Email is NOT NULL)
OR (s.Status =''Pending Supervisor Review'' and eh.Sup_Email is NOT NULL)
OR (s.Status =''Pending Manager Review'' and eh.Mgr_Email is NOT NULL)
OR (s.Status =''Pending Employee Review'' and eh.Emp_Email is NOT NULL))
AND LEN(cl.FormName) > 10
Order By cl.SubmittedDate DESC'
--and [strCSREmail] = '''+@strFormMail+'''
EXEC (@nvcSQL)	
	    
END --sp_SelectCoaching4Contact


GO

--**********************************
